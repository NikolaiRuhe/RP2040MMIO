import MMIO
import MMIOExtensions
public struct IO_BANK0 {

    public static var `default`: Self { .init(unsafeAddress: 0x40014000) }

    /// GPIO status
    public var GPIO0_STATUS: Register<GPIO0_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0000), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0000))
          #endif
        }
    }
    public struct GPIO0_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO0_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO0_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO0_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO0_CTRL: Register<GPIO0_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0004), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0004))
          #endif
        }
    }
    public struct GPIO0_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_jtag_tck = 0
            case FUNCSEL_spi0_rx = 1
            case FUNCSEL_uart0_tx = 2
            case FUNCSEL_i2c0_sda = 3
            case FUNCSEL_pwm_a_0 = 4
            case FUNCSEL_sio_0 = 5
            case FUNCSEL_pio0_0 = 6
            case FUNCSEL_pio1_0 = 7
            case FUNCSEL_usb_muxing_overcurr_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO0_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO0_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO1_STATUS: Register<GPIO1_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0008), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0008))
          #endif
        }
    }
    public struct GPIO1_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO1_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO1_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO1_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO1_CTRL: Register<GPIO1_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x000c), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x000c))
          #endif
        }
    }
    public struct GPIO1_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_jtag_tms = 0
            case FUNCSEL_spi0_ss_n = 1
            case FUNCSEL_uart0_rx = 2
            case FUNCSEL_i2c0_scl = 3
            case FUNCSEL_pwm_b_0 = 4
            case FUNCSEL_sio_1 = 5
            case FUNCSEL_pio0_1 = 6
            case FUNCSEL_pio1_1 = 7
            case FUNCSEL_usb_muxing_vbus_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO1_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO1_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO2_STATUS: Register<GPIO2_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0010), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0010))
          #endif
        }
    }
    public struct GPIO2_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO2_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO2_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO2_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO2_CTRL: Register<GPIO2_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0014), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0014))
          #endif
        }
    }
    public struct GPIO2_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_jtag_tdi = 0
            case FUNCSEL_spi0_sclk = 1
            case FUNCSEL_uart0_cts = 2
            case FUNCSEL_i2c1_sda = 3
            case FUNCSEL_pwm_a_1 = 4
            case FUNCSEL_sio_2 = 5
            case FUNCSEL_pio0_2 = 6
            case FUNCSEL_pio1_2 = 7
            case FUNCSEL_usb_muxing_vbus_en = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO2_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO2_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO3_STATUS: Register<GPIO3_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0018), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0018))
          #endif
        }
    }
    public struct GPIO3_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO3_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO3_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO3_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO3_CTRL: Register<GPIO3_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x001c), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x001c))
          #endif
        }
    }
    public struct GPIO3_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_jtag_tdo = 0
            case FUNCSEL_spi0_tx = 1
            case FUNCSEL_uart0_rts = 2
            case FUNCSEL_i2c1_scl = 3
            case FUNCSEL_pwm_b_1 = 4
            case FUNCSEL_sio_3 = 5
            case FUNCSEL_pio0_3 = 6
            case FUNCSEL_pio1_3 = 7
            case FUNCSEL_usb_muxing_overcurr_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO3_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO3_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO4_STATUS: Register<GPIO4_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0020), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0020))
          #endif
        }
    }
    public struct GPIO4_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO4_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO4_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO4_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO4_CTRL: Register<GPIO4_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0024), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0024))
          #endif
        }
    }
    public struct GPIO4_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi0_rx = 1
            case FUNCSEL_uart1_tx = 2
            case FUNCSEL_i2c0_sda = 3
            case FUNCSEL_pwm_a_2 = 4
            case FUNCSEL_sio_4 = 5
            case FUNCSEL_pio0_4 = 6
            case FUNCSEL_pio1_4 = 7
            case FUNCSEL_usb_muxing_vbus_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO4_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO4_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO5_STATUS: Register<GPIO5_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0028), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0028))
          #endif
        }
    }
    public struct GPIO5_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO5_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO5_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO5_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO5_CTRL: Register<GPIO5_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x002c), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x002c))
          #endif
        }
    }
    public struct GPIO5_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi0_ss_n = 1
            case FUNCSEL_uart1_rx = 2
            case FUNCSEL_i2c0_scl = 3
            case FUNCSEL_pwm_b_2 = 4
            case FUNCSEL_sio_5 = 5
            case FUNCSEL_pio0_5 = 6
            case FUNCSEL_pio1_5 = 7
            case FUNCSEL_usb_muxing_vbus_en = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO5_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO5_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO6_STATUS: Register<GPIO6_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0030), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0030))
          #endif
        }
    }
    public struct GPIO6_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO6_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO6_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO6_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO6_CTRL: Register<GPIO6_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0034), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0034))
          #endif
        }
    }
    public struct GPIO6_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi0_sclk = 1
            case FUNCSEL_uart1_cts = 2
            case FUNCSEL_i2c1_sda = 3
            case FUNCSEL_pwm_a_3 = 4
            case FUNCSEL_sio_6 = 5
            case FUNCSEL_pio0_6 = 6
            case FUNCSEL_pio1_6 = 7
            case FUNCSEL_usb_muxing_extphy_softcon = 8
            case FUNCSEL_usb_muxing_overcurr_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO6_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO6_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO7_STATUS: Register<GPIO7_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0038), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0038))
          #endif
        }
    }
    public struct GPIO7_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO7_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO7_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO7_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO7_CTRL: Register<GPIO7_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x003c), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x003c))
          #endif
        }
    }
    public struct GPIO7_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi0_tx = 1
            case FUNCSEL_uart1_rts = 2
            case FUNCSEL_i2c1_scl = 3
            case FUNCSEL_pwm_b_3 = 4
            case FUNCSEL_sio_7 = 5
            case FUNCSEL_pio0_7 = 6
            case FUNCSEL_pio1_7 = 7
            case FUNCSEL_usb_muxing_extphy_oe_n = 8
            case FUNCSEL_usb_muxing_vbus_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO7_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO7_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO8_STATUS: Register<GPIO8_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0040), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0040))
          #endif
        }
    }
    public struct GPIO8_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO8_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO8_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO8_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO8_CTRL: Register<GPIO8_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0044), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0044))
          #endif
        }
    }
    public struct GPIO8_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi1_rx = 1
            case FUNCSEL_uart1_tx = 2
            case FUNCSEL_i2c0_sda = 3
            case FUNCSEL_pwm_a_4 = 4
            case FUNCSEL_sio_8 = 5
            case FUNCSEL_pio0_8 = 6
            case FUNCSEL_pio1_8 = 7
            case FUNCSEL_usb_muxing_extphy_rcv = 8
            case FUNCSEL_usb_muxing_vbus_en = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO8_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO8_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO9_STATUS: Register<GPIO9_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0048), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0048))
          #endif
        }
    }
    public struct GPIO9_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO9_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO9_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO9_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO9_CTRL: Register<GPIO9_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x004c), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x004c))
          #endif
        }
    }
    public struct GPIO9_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi1_ss_n = 1
            case FUNCSEL_uart1_rx = 2
            case FUNCSEL_i2c0_scl = 3
            case FUNCSEL_pwm_b_4 = 4
            case FUNCSEL_sio_9 = 5
            case FUNCSEL_pio0_9 = 6
            case FUNCSEL_pio1_9 = 7
            case FUNCSEL_usb_muxing_extphy_vp = 8
            case FUNCSEL_usb_muxing_overcurr_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO9_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO9_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO10_STATUS: Register<GPIO10_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0050), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0050))
          #endif
        }
    }
    public struct GPIO10_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO10_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO10_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO10_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO10_CTRL: Register<GPIO10_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0054), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0054))
          #endif
        }
    }
    public struct GPIO10_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi1_sclk = 1
            case FUNCSEL_uart1_cts = 2
            case FUNCSEL_i2c1_sda = 3
            case FUNCSEL_pwm_a_5 = 4
            case FUNCSEL_sio_10 = 5
            case FUNCSEL_pio0_10 = 6
            case FUNCSEL_pio1_10 = 7
            case FUNCSEL_usb_muxing_extphy_vm = 8
            case FUNCSEL_usb_muxing_vbus_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO10_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO10_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO11_STATUS: Register<GPIO11_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0058), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0058))
          #endif
        }
    }
    public struct GPIO11_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO11_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO11_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO11_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO11_CTRL: Register<GPIO11_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x005c), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x005c))
          #endif
        }
    }
    public struct GPIO11_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi1_tx = 1
            case FUNCSEL_uart1_rts = 2
            case FUNCSEL_i2c1_scl = 3
            case FUNCSEL_pwm_b_5 = 4
            case FUNCSEL_sio_11 = 5
            case FUNCSEL_pio0_11 = 6
            case FUNCSEL_pio1_11 = 7
            case FUNCSEL_usb_muxing_extphy_suspnd = 8
            case FUNCSEL_usb_muxing_vbus_en = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO11_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO11_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO12_STATUS: Register<GPIO12_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0060), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0060))
          #endif
        }
    }
    public struct GPIO12_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO12_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO12_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO12_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO12_CTRL: Register<GPIO12_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0064), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0064))
          #endif
        }
    }
    public struct GPIO12_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi1_rx = 1
            case FUNCSEL_uart0_tx = 2
            case FUNCSEL_i2c0_sda = 3
            case FUNCSEL_pwm_a_6 = 4
            case FUNCSEL_sio_12 = 5
            case FUNCSEL_pio0_12 = 6
            case FUNCSEL_pio1_12 = 7
            case FUNCSEL_usb_muxing_extphy_speed = 8
            case FUNCSEL_usb_muxing_overcurr_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO12_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO12_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO13_STATUS: Register<GPIO13_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0068), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0068))
          #endif
        }
    }
    public struct GPIO13_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO13_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO13_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO13_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO13_CTRL: Register<GPIO13_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x006c), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x006c))
          #endif
        }
    }
    public struct GPIO13_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi1_ss_n = 1
            case FUNCSEL_uart0_rx = 2
            case FUNCSEL_i2c0_scl = 3
            case FUNCSEL_pwm_b_6 = 4
            case FUNCSEL_sio_13 = 5
            case FUNCSEL_pio0_13 = 6
            case FUNCSEL_pio1_13 = 7
            case FUNCSEL_usb_muxing_extphy_vpo = 8
            case FUNCSEL_usb_muxing_vbus_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO13_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO13_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO14_STATUS: Register<GPIO14_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0070), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0070))
          #endif
        }
    }
    public struct GPIO14_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO14_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO14_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO14_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO14_CTRL: Register<GPIO14_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0074), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0074))
          #endif
        }
    }
    public struct GPIO14_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi1_sclk = 1
            case FUNCSEL_uart0_cts = 2
            case FUNCSEL_i2c1_sda = 3
            case FUNCSEL_pwm_a_7 = 4
            case FUNCSEL_sio_14 = 5
            case FUNCSEL_pio0_14 = 6
            case FUNCSEL_pio1_14 = 7
            case FUNCSEL_usb_muxing_extphy_vmo = 8
            case FUNCSEL_usb_muxing_vbus_en = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO14_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO14_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO15_STATUS: Register<GPIO15_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0078), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0078))
          #endif
        }
    }
    public struct GPIO15_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO15_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO15_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO15_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO15_CTRL: Register<GPIO15_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x007c), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x007c))
          #endif
        }
    }
    public struct GPIO15_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi1_tx = 1
            case FUNCSEL_uart0_rts = 2
            case FUNCSEL_i2c1_scl = 3
            case FUNCSEL_pwm_b_7 = 4
            case FUNCSEL_sio_15 = 5
            case FUNCSEL_pio0_15 = 6
            case FUNCSEL_pio1_15 = 7
            case FUNCSEL_usb_muxing_digital_dp = 8
            case FUNCSEL_usb_muxing_overcurr_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO15_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO15_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO16_STATUS: Register<GPIO16_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0080), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0080))
          #endif
        }
    }
    public struct GPIO16_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO16_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO16_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO16_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO16_CTRL: Register<GPIO16_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0084), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0084))
          #endif
        }
    }
    public struct GPIO16_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi0_rx = 1
            case FUNCSEL_uart0_tx = 2
            case FUNCSEL_i2c0_sda = 3
            case FUNCSEL_pwm_a_0 = 4
            case FUNCSEL_sio_16 = 5
            case FUNCSEL_pio0_16 = 6
            case FUNCSEL_pio1_16 = 7
            case FUNCSEL_usb_muxing_digital_dm = 8
            case FUNCSEL_usb_muxing_vbus_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO16_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO16_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO17_STATUS: Register<GPIO17_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0088), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0088))
          #endif
        }
    }
    public struct GPIO17_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO17_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO17_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO17_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO17_CTRL: Register<GPIO17_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x008c), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x008c))
          #endif
        }
    }
    public struct GPIO17_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi0_ss_n = 1
            case FUNCSEL_uart0_rx = 2
            case FUNCSEL_i2c0_scl = 3
            case FUNCSEL_pwm_b_0 = 4
            case FUNCSEL_sio_17 = 5
            case FUNCSEL_pio0_17 = 6
            case FUNCSEL_pio1_17 = 7
            case FUNCSEL_usb_muxing_vbus_en = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO17_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO17_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO18_STATUS: Register<GPIO18_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0090), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0090))
          #endif
        }
    }
    public struct GPIO18_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO18_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO18_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO18_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO18_CTRL: Register<GPIO18_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0094), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0094))
          #endif
        }
    }
    public struct GPIO18_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi0_sclk = 1
            case FUNCSEL_uart0_cts = 2
            case FUNCSEL_i2c1_sda = 3
            case FUNCSEL_pwm_a_1 = 4
            case FUNCSEL_sio_18 = 5
            case FUNCSEL_pio0_18 = 6
            case FUNCSEL_pio1_18 = 7
            case FUNCSEL_usb_muxing_overcurr_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO18_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO18_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO19_STATUS: Register<GPIO19_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0098), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0098))
          #endif
        }
    }
    public struct GPIO19_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO19_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO19_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO19_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO19_CTRL: Register<GPIO19_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x009c), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x009c))
          #endif
        }
    }
    public struct GPIO19_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi0_tx = 1
            case FUNCSEL_uart0_rts = 2
            case FUNCSEL_i2c1_scl = 3
            case FUNCSEL_pwm_b_1 = 4
            case FUNCSEL_sio_19 = 5
            case FUNCSEL_pio0_19 = 6
            case FUNCSEL_pio1_19 = 7
            case FUNCSEL_usb_muxing_vbus_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO19_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO19_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO20_STATUS: Register<GPIO20_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00a0), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00a0))
          #endif
        }
    }
    public struct GPIO20_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO20_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO20_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO20_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO20_CTRL: Register<GPIO20_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00a4), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00a4))
          #endif
        }
    }
    public struct GPIO20_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi0_rx = 1
            case FUNCSEL_uart1_tx = 2
            case FUNCSEL_i2c0_sda = 3
            case FUNCSEL_pwm_a_2 = 4
            case FUNCSEL_sio_20 = 5
            case FUNCSEL_pio0_20 = 6
            case FUNCSEL_pio1_20 = 7
            case FUNCSEL_clocks_gpin_0 = 8
            case FUNCSEL_usb_muxing_vbus_en = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO20_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO20_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO21_STATUS: Register<GPIO21_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00a8), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00a8))
          #endif
        }
    }
    public struct GPIO21_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO21_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO21_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO21_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO21_CTRL: Register<GPIO21_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00ac), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00ac))
          #endif
        }
    }
    public struct GPIO21_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi0_ss_n = 1
            case FUNCSEL_uart1_rx = 2
            case FUNCSEL_i2c0_scl = 3
            case FUNCSEL_pwm_b_2 = 4
            case FUNCSEL_sio_21 = 5
            case FUNCSEL_pio0_21 = 6
            case FUNCSEL_pio1_21 = 7
            case FUNCSEL_clocks_gpout_0 = 8
            case FUNCSEL_usb_muxing_overcurr_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO21_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO21_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO22_STATUS: Register<GPIO22_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00b0), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00b0))
          #endif
        }
    }
    public struct GPIO22_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO22_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO22_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO22_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO22_CTRL: Register<GPIO22_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00b4), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00b4))
          #endif
        }
    }
    public struct GPIO22_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi0_sclk = 1
            case FUNCSEL_uart1_cts = 2
            case FUNCSEL_i2c1_sda = 3
            case FUNCSEL_pwm_a_3 = 4
            case FUNCSEL_sio_22 = 5
            case FUNCSEL_pio0_22 = 6
            case FUNCSEL_pio1_22 = 7
            case FUNCSEL_clocks_gpin_1 = 8
            case FUNCSEL_usb_muxing_vbus_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO22_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO22_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO23_STATUS: Register<GPIO23_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00b8), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00b8))
          #endif
        }
    }
    public struct GPIO23_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO23_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO23_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO23_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO23_CTRL: Register<GPIO23_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00bc), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00bc))
          #endif
        }
    }
    public struct GPIO23_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi0_tx = 1
            case FUNCSEL_uart1_rts = 2
            case FUNCSEL_i2c1_scl = 3
            case FUNCSEL_pwm_b_3 = 4
            case FUNCSEL_sio_23 = 5
            case FUNCSEL_pio0_23 = 6
            case FUNCSEL_pio1_23 = 7
            case FUNCSEL_clocks_gpout_1 = 8
            case FUNCSEL_usb_muxing_vbus_en = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO23_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO23_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO24_STATUS: Register<GPIO24_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00c0), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00c0))
          #endif
        }
    }
    public struct GPIO24_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO24_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO24_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO24_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO24_CTRL: Register<GPIO24_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00c4), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00c4))
          #endif
        }
    }
    public struct GPIO24_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi1_rx = 1
            case FUNCSEL_uart1_tx = 2
            case FUNCSEL_i2c0_sda = 3
            case FUNCSEL_pwm_a_4 = 4
            case FUNCSEL_sio_24 = 5
            case FUNCSEL_pio0_24 = 6
            case FUNCSEL_pio1_24 = 7
            case FUNCSEL_clocks_gpout_2 = 8
            case FUNCSEL_usb_muxing_overcurr_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO24_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO24_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO25_STATUS: Register<GPIO25_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00c8), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00c8))
          #endif
        }
    }
    public struct GPIO25_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO25_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO25_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO25_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO25_CTRL: Register<GPIO25_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00cc), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00cc))
          #endif
        }
    }
    public struct GPIO25_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi1_ss_n = 1
            case FUNCSEL_uart1_rx = 2
            case FUNCSEL_i2c0_scl = 3
            case FUNCSEL_pwm_b_4 = 4
            case FUNCSEL_sio_25 = 5
            case FUNCSEL_pio0_25 = 6
            case FUNCSEL_pio1_25 = 7
            case FUNCSEL_clocks_gpout_3 = 8
            case FUNCSEL_usb_muxing_vbus_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO25_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO25_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO26_STATUS: Register<GPIO26_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00d0), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00d0))
          #endif
        }
    }
    public struct GPIO26_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO26_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO26_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO26_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO26_CTRL: Register<GPIO26_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00d4), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00d4))
          #endif
        }
    }
    public struct GPIO26_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi1_sclk = 1
            case FUNCSEL_uart1_cts = 2
            case FUNCSEL_i2c1_sda = 3
            case FUNCSEL_pwm_a_5 = 4
            case FUNCSEL_sio_26 = 5
            case FUNCSEL_pio0_26 = 6
            case FUNCSEL_pio1_26 = 7
            case FUNCSEL_usb_muxing_vbus_en = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO26_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO26_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO27_STATUS: Register<GPIO27_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00d8), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00d8))
          #endif
        }
    }
    public struct GPIO27_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO27_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO27_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO27_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO27_CTRL: Register<GPIO27_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00dc), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00dc))
          #endif
        }
    }
    public struct GPIO27_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi1_tx = 1
            case FUNCSEL_uart1_rts = 2
            case FUNCSEL_i2c1_scl = 3
            case FUNCSEL_pwm_b_5 = 4
            case FUNCSEL_sio_27 = 5
            case FUNCSEL_pio0_27 = 6
            case FUNCSEL_pio1_27 = 7
            case FUNCSEL_usb_muxing_overcurr_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO27_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO27_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO28_STATUS: Register<GPIO28_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00e0), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00e0))
          #endif
        }
    }
    public struct GPIO28_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO28_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO28_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO28_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO28_CTRL: Register<GPIO28_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00e4), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00e4))
          #endif
        }
    }
    public struct GPIO28_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi1_rx = 1
            case FUNCSEL_uart0_tx = 2
            case FUNCSEL_i2c0_sda = 3
            case FUNCSEL_pwm_a_6 = 4
            case FUNCSEL_sio_28 = 5
            case FUNCSEL_pio0_28 = 6
            case FUNCSEL_pio1_28 = 7
            case FUNCSEL_usb_muxing_vbus_detect = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO28_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO28_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// GPIO status
    public var GPIO29_STATUS: Register<GPIO29_STATUS_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00e8), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00e8))
          #endif
        }
    }
    public struct GPIO29_STATUS_Descriptor {
        @available(*, unavailable)
        /// interrupt to processors, after override is applied
        public var IRQTOPROC: IRQTOPROC_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// interrupt from pad before override is applied
        public var IRQFROMPAD: IRQFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal to peripheral, after override is applied
        public var INTOPERI: INTOPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// input signal from pad, before override is applied
        public var INFROMPAD: INFROMPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable to pad after register override is applied
        public var OETOPAD: OETOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output enable from selected peripheral, before register override is applied
        public var OEFROMPERI: OEFROMPERI_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal to pad after register override is applied
        public var OUTTOPAD: OUTTOPAD_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)

        /// output signal from selected peripheral, before register override is applied
        public var OUTFROMPERI: OUTFROMPERI_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQTOPROC_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum IRQFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum INTOPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum INFROMPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum OETOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum OEFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum OUTTOPAD_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum OUTFROMPERI_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO29_STATUS_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var IRQTOPROC: UInt32 {
                @inlinable @inline(__always) get {
                    IRQTOPROC_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQTOPROC_Field.insert(newValue, into: &self.storage)
                }
                }
              public var IRQFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  IRQFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  IRQFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INTOPERI: UInt32 {
                @inlinable @inline(__always) get {
                  INTOPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INTOPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var INFROMPAD: UInt32 {
                @inlinable @inline(__always) get {
                  INFROMPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INFROMPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OETOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OETOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OETOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OEFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTTOPAD: UInt32 {
                @inlinable @inline(__always) get {
                  OUTTOPAD_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTTOPAD_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTFROMPERI: UInt32 {
                @inlinable @inline(__always) get {
                  OUTFROMPERI_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTFROMPERI_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = GPIO29_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var IRQTOPROC: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQTOPROC_Field.self, Bool.self)
                    return Bool(storage: self.raw.IRQTOPROC)
                }
                }
              public var IRQFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(IRQFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.IRQFROMPAD)
                }
              }
              public var INTOPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INTOPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.INTOPERI)
                }
              }
              public var INFROMPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INFROMPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.INFROMPAD)
                }
              }
              public var OETOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OETOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OETOPAD)
                }
              }
              public var OEFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OEFROMPERI)
                }
              }
              public var OUTTOPAD: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTTOPAD_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTTOPAD)
                }
              }
              public var OUTFROMPERI: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTFROMPERI_Field.self, Bool.self)
                  return Bool(storage: self.raw.OUTFROMPERI)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = GPIO29_STATUS_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// GPIO control including function select and overrides.
    public var GPIO29_CTRL: Register<GPIO29_CTRL_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00ec), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00ec))
          #endif
        }
    }
    public struct GPIO29_CTRL_Descriptor {
        @available(*, unavailable)
        public var IRQOVER: IRQOVER_Field {
            get {
                fatalError()
            }
        }

        public enum IRQOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the interrupt
            case IRQOVER_NORMAL = 0
            /// invert the interrupt
            case IRQOVER_INVERT = 1
            /// drive interrupt low
            case IRQOVER_LOW = 2
            /// drive interrupt high
            case IRQOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var INOVER: INOVER_Field {
            get {
                fatalError()
            }
        }

        public enum INOVER_Values: UInt, BitFieldProjectable {
            /// don't invert the peri input
            case INOVER_NORMAL = 0
            /// invert the peri input
            case INOVER_INVERT = 1
            /// drive peri input low
            case INOVER_LOW = 2
            /// drive peri input high
            case INOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OEOVER: OEOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OEOVER_Values: UInt, BitFieldProjectable {
            /// drive output enable from peripheral signal selected by funcsel
            case OEOVER_NORMAL = 0
            /// drive output enable from inverse of peripheral signal selected by funcsel
            case OEOVER_INVERT = 1
            /// disable output
            case OEOVER_DISABLE = 2
            /// enable output
            case OEOVER_ENABLE = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)
        public var OUTOVER: OUTOVER_Field {
            get {
                fatalError()
            }
        }

        public enum OUTOVER_Values: UInt, BitFieldProjectable {
            /// drive output from peripheral signal selected by funcsel
            case OUTOVER_NORMAL = 0
            /// drive output from inverse of peripheral signal selected by funcsel
            case OUTOVER_INVERT = 1
            /// drive output low
            case OUTOVER_LOW = 2
            /// drive output high
            case OUTOVER_HIGH = 3

            public static var bitWidth: Int { 2 }
        }
        @available(*, unavailable)

        /// 0-31 -> selects pin function according to the gpio table
        /// 31 == NULL
        public var FUNCSEL: FUNCSEL_Field {
            get {
                fatalError()
            }
        }

        public enum FUNCSEL_Values: UInt, BitFieldProjectable {
            case FUNCSEL_spi1_ss_n = 1
            case FUNCSEL_uart0_rx = 2
            case FUNCSEL_i2c0_scl = 3
            case FUNCSEL_pwm_b_6 = 4
            case FUNCSEL_sio_29 = 5
            case FUNCSEL_pio0_29 = 6
            case FUNCSEL_pio1_29 = 7
            case FUNCSEL_usb_muxing_vbus_en = 9
            case FUNCSEL_null = 31

            public static var bitWidth: Int { 5 }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum IRQOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 30
        }

        public enum INOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 18
        }

        public enum OEOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 14
        }

        public enum OUTOVER_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 10
        }

        public enum FUNCSEL_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 5
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = GPIO29_CTRL_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var IRQOVER: UInt32 {
                @inlinable @inline(__always) get {
                    IRQOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    IRQOVER_Field.insert(newValue, into: &self.storage)
                }
                }
              public var INOVER: UInt32 {
                @inlinable @inline(__always) get {
                  INOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  INOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OEOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OEOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OEOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var OUTOVER: UInt32 {
                @inlinable @inline(__always) get {
                  OUTOVER_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  OUTOVER_Field.insert(newValue, into: &self.storage)
                }
              }
              public var FUNCSEL: UInt32 {
                @inlinable @inline(__always) get {
                  FUNCSEL_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  FUNCSEL_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = GPIO29_CTRL_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var IRQOVER: IRQOVER_Values {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    return IRQOVER_Values(storage: self.raw.IRQOVER)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(IRQOVER_Field.self, IRQOVER_Values.self)
                    self.raw.IRQOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var INOVER: INOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  return INOVER_Values(storage: self.raw.INOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(INOVER_Field.self, INOVER_Values.self)
                  self.raw.INOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OEOVER: OEOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  return OEOVER_Values(storage: self.raw.OEOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OEOVER_Field.self, OEOVER_Values.self)
                  self.raw.OEOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var OUTOVER: OUTOVER_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  return OUTOVER_Values(storage: self.raw.OUTOVER)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(OUTOVER_Field.self, OUTOVER_Values.self)
                  self.raw.OUTOVER = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var FUNCSEL: FUNCSEL_Values {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  return FUNCSEL_Values(storage: self.raw.FUNCSEL)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(FUNCSEL_Field.self, FUNCSEL_Values.self)
                  self.raw.FUNCSEL = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Raw Interrupts
    public var INTR0: Register<INTR0_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00f0), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00f0))
          #endif
        }
    }
    public struct INTR0_Descriptor {
        @available(*, unavailable)
        public var GPIO7_EDGE_HIGH: GPIO7_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_EDGE_LOW: GPIO7_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_HIGH: GPIO7_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_LOW: GPIO7_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_HIGH: GPIO6_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_LOW: GPIO6_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_HIGH: GPIO6_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_LOW: GPIO6_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_HIGH: GPIO5_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_LOW: GPIO5_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_HIGH: GPIO5_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_LOW: GPIO5_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_HIGH: GPIO4_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_LOW: GPIO4_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_HIGH: GPIO4_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_LOW: GPIO4_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_HIGH: GPIO3_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_LOW: GPIO3_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_HIGH: GPIO3_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_LOW: GPIO3_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_HIGH: GPIO2_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_LOW: GPIO2_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_HIGH: GPIO2_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_LOW: GPIO2_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_HIGH: GPIO1_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_LOW: GPIO1_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_HIGH: GPIO1_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_LOW: GPIO1_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_HIGH: GPIO0_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_LOW: GPIO0_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_HIGH: GPIO0_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_LOW: GPIO0_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO7_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO7_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO7_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO7_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO6_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO6_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO6_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO6_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO5_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO5_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO5_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO5_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO4_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO4_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO4_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO4_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO3_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO3_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO3_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO3_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO2_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO2_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO2_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO2_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO1_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO1_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO1_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO1_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO0_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO0_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO0_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO0_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = INTR0_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var GPIO7_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO7_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO7_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO7_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = INTR0_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var GPIO7_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO7_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO7_EDGE_HIGH)
                }
                }
              public var GPIO7_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_EDGE_LOW)
                }
              }
              public var GPIO7_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_HIGH)
                }
              }
              public var GPIO7_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_LOW)
                }
              }
              public var GPIO6_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_HIGH)
                }
              }
              public var GPIO6_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_LOW)
                }
              }
              public var GPIO6_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_HIGH)
                }
              }
              public var GPIO6_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_LOW)
                }
              }
              public var GPIO5_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_HIGH)
                }
              }
              public var GPIO5_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_LOW)
                }
              }
              public var GPIO5_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_HIGH)
                }
              }
              public var GPIO5_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_LOW)
                }
              }
              public var GPIO4_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_HIGH)
                }
              }
              public var GPIO4_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_LOW)
                }
              }
              public var GPIO4_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_HIGH)
                }
              }
              public var GPIO4_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_LOW)
                }
              }
              public var GPIO3_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_HIGH)
                }
              }
              public var GPIO3_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_LOW)
                }
              }
              public var GPIO3_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_HIGH)
                }
              }
              public var GPIO3_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_LOW)
                }
              }
              public var GPIO2_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_HIGH)
                }
              }
              public var GPIO2_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_LOW)
                }
              }
              public var GPIO2_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_HIGH)
                }
              }
              public var GPIO2_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_LOW)
                }
              }
              public var GPIO1_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_HIGH)
                }
              }
              public var GPIO1_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_LOW)
                }
              }
              public var GPIO1_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_HIGH)
                }
              }
              public var GPIO1_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_LOW)
                }
              }
              public var GPIO0_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_HIGH)
                }
              }
              public var GPIO0_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_LOW)
                }
              }
              public var GPIO0_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_HIGH)
                }
              }
              public var GPIO0_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_LOW)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = INTR0_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }
                public var GPIO7_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO7_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO7_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO7_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO7_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO7_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO7_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO7_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO6_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO6_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO5_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO5_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO4_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO4_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO3_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO3_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO2_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO2_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO1_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO1_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO0_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO0_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Raw Interrupts
    public var INTR1: Register<INTR1_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00f4), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00f4))
          #endif
        }
    }
    public struct INTR1_Descriptor {
        @available(*, unavailable)
        public var GPIO15_EDGE_HIGH: GPIO15_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_EDGE_LOW: GPIO15_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_HIGH: GPIO15_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_LOW: GPIO15_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_HIGH: GPIO14_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_LOW: GPIO14_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_HIGH: GPIO14_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_LOW: GPIO14_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_HIGH: GPIO13_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_LOW: GPIO13_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_HIGH: GPIO13_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_LOW: GPIO13_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_HIGH: GPIO12_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_LOW: GPIO12_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_HIGH: GPIO12_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_LOW: GPIO12_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_HIGH: GPIO11_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_LOW: GPIO11_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_HIGH: GPIO11_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_LOW: GPIO11_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_HIGH: GPIO10_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_LOW: GPIO10_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_HIGH: GPIO10_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_LOW: GPIO10_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_HIGH: GPIO9_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_LOW: GPIO9_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_HIGH: GPIO9_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_LOW: GPIO9_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_HIGH: GPIO8_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_LOW: GPIO8_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_HIGH: GPIO8_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_LOW: GPIO8_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO15_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO15_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO15_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO15_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO14_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO14_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO14_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO14_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO13_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO13_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO13_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO13_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO12_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO12_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO12_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO12_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO11_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO11_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO11_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO11_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO10_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO10_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO10_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO10_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO9_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO9_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO9_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO9_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO8_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO8_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO8_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO8_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = INTR1_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var GPIO15_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO15_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO15_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO15_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = INTR1_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var GPIO15_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO15_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO15_EDGE_HIGH)
                }
                }
              public var GPIO15_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_EDGE_LOW)
                }
              }
              public var GPIO15_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_HIGH)
                }
              }
              public var GPIO15_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_LOW)
                }
              }
              public var GPIO14_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_HIGH)
                }
              }
              public var GPIO14_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_LOW)
                }
              }
              public var GPIO14_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_HIGH)
                }
              }
              public var GPIO14_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_LOW)
                }
              }
              public var GPIO13_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_HIGH)
                }
              }
              public var GPIO13_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_LOW)
                }
              }
              public var GPIO13_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_HIGH)
                }
              }
              public var GPIO13_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_LOW)
                }
              }
              public var GPIO12_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_HIGH)
                }
              }
              public var GPIO12_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_LOW)
                }
              }
              public var GPIO12_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_HIGH)
                }
              }
              public var GPIO12_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_LOW)
                }
              }
              public var GPIO11_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_HIGH)
                }
              }
              public var GPIO11_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_LOW)
                }
              }
              public var GPIO11_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_HIGH)
                }
              }
              public var GPIO11_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_LOW)
                }
              }
              public var GPIO10_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_HIGH)
                }
              }
              public var GPIO10_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_LOW)
                }
              }
              public var GPIO10_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_HIGH)
                }
              }
              public var GPIO10_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_LOW)
                }
              }
              public var GPIO9_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_HIGH)
                }
              }
              public var GPIO9_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_LOW)
                }
              }
              public var GPIO9_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_HIGH)
                }
              }
              public var GPIO9_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_LOW)
                }
              }
              public var GPIO8_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_HIGH)
                }
              }
              public var GPIO8_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_LOW)
                }
              }
              public var GPIO8_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_HIGH)
                }
              }
              public var GPIO8_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_LOW)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = INTR1_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }
                public var GPIO15_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO15_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO15_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO15_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO15_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO15_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO15_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO15_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO14_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO14_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO13_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO13_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO12_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO12_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO11_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO11_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO10_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO10_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO9_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO9_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO8_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO8_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Raw Interrupts
    public var INTR2: Register<INTR2_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00f8), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00f8))
          #endif
        }
    }
    public struct INTR2_Descriptor {
        @available(*, unavailable)
        public var GPIO23_EDGE_HIGH: GPIO23_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_EDGE_LOW: GPIO23_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_HIGH: GPIO23_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_LOW: GPIO23_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_HIGH: GPIO22_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_LOW: GPIO22_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_HIGH: GPIO22_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_LOW: GPIO22_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_HIGH: GPIO21_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_LOW: GPIO21_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_HIGH: GPIO21_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_LOW: GPIO21_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_HIGH: GPIO20_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_LOW: GPIO20_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_HIGH: GPIO20_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_LOW: GPIO20_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_HIGH: GPIO19_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_LOW: GPIO19_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_HIGH: GPIO19_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_LOW: GPIO19_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_HIGH: GPIO18_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_LOW: GPIO18_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_HIGH: GPIO18_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_LOW: GPIO18_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_HIGH: GPIO17_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_LOW: GPIO17_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_HIGH: GPIO17_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_LOW: GPIO17_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_HIGH: GPIO16_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_LOW: GPIO16_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_HIGH: GPIO16_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_LOW: GPIO16_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO23_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO23_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO23_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO23_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO22_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO22_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO22_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO22_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO21_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO21_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO21_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO21_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO20_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO20_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO20_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO20_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO19_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO19_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO19_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO19_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO18_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO18_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO18_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO18_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO17_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO17_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO17_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO17_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO16_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO16_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO16_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO16_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = INTR2_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var GPIO23_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO23_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO23_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO23_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = INTR2_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var GPIO23_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO23_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO23_EDGE_HIGH)
                }
                }
              public var GPIO23_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_EDGE_LOW)
                }
              }
              public var GPIO23_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_HIGH)
                }
              }
              public var GPIO23_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_LOW)
                }
              }
              public var GPIO22_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_HIGH)
                }
              }
              public var GPIO22_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_LOW)
                }
              }
              public var GPIO22_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_HIGH)
                }
              }
              public var GPIO22_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_LOW)
                }
              }
              public var GPIO21_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_HIGH)
                }
              }
              public var GPIO21_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_LOW)
                }
              }
              public var GPIO21_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_HIGH)
                }
              }
              public var GPIO21_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_LOW)
                }
              }
              public var GPIO20_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_HIGH)
                }
              }
              public var GPIO20_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_LOW)
                }
              }
              public var GPIO20_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_HIGH)
                }
              }
              public var GPIO20_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_LOW)
                }
              }
              public var GPIO19_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_HIGH)
                }
              }
              public var GPIO19_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_LOW)
                }
              }
              public var GPIO19_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_HIGH)
                }
              }
              public var GPIO19_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_LOW)
                }
              }
              public var GPIO18_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_HIGH)
                }
              }
              public var GPIO18_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_LOW)
                }
              }
              public var GPIO18_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_HIGH)
                }
              }
              public var GPIO18_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_LOW)
                }
              }
              public var GPIO17_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_HIGH)
                }
              }
              public var GPIO17_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_LOW)
                }
              }
              public var GPIO17_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_HIGH)
                }
              }
              public var GPIO17_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_LOW)
                }
              }
              public var GPIO16_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_HIGH)
                }
              }
              public var GPIO16_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_LOW)
                }
              }
              public var GPIO16_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_HIGH)
                }
              }
              public var GPIO16_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_LOW)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = INTR2_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }
                public var GPIO23_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO23_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO23_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO23_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO23_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO23_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO23_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO23_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO22_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO22_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO21_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO21_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO20_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO20_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO19_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO19_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO18_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO18_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO17_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO17_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO16_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO16_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Raw Interrupts
    public var INTR3: Register<INTR3_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x00fc), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x00fc))
          #endif
        }
    }
    public struct INTR3_Descriptor {
        @available(*, unavailable)
        public var GPIO29_EDGE_HIGH: GPIO29_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_EDGE_LOW: GPIO29_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_HIGH: GPIO29_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_LOW: GPIO29_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_HIGH: GPIO28_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_LOW: GPIO28_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_HIGH: GPIO28_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_LOW: GPIO28_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_HIGH: GPIO27_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_LOW: GPIO27_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_HIGH: GPIO27_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_LOW: GPIO27_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_HIGH: GPIO26_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_LOW: GPIO26_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_HIGH: GPIO26_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_LOW: GPIO26_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_HIGH: GPIO25_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_LOW: GPIO25_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_HIGH: GPIO25_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_LOW: GPIO25_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_HIGH: GPIO24_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_LOW: GPIO24_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_HIGH: GPIO24_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_LOW: GPIO24_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO29_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO29_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO29_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO29_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO28_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO28_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO28_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO28_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO27_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO27_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO27_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO27_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO26_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO26_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO26_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO26_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO25_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO25_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO25_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO25_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO24_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO24_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO24_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO24_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = INTR3_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var GPIO29_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO29_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO29_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO29_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = INTR3_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var GPIO29_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO29_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO29_EDGE_HIGH)
                }
                }
              public var GPIO29_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_EDGE_LOW)
                }
              }
              public var GPIO29_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_HIGH)
                }
              }
              public var GPIO29_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_LOW)
                }
              }
              public var GPIO28_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_HIGH)
                }
              }
              public var GPIO28_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_LOW)
                }
              }
              public var GPIO28_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_HIGH)
                }
              }
              public var GPIO28_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_LOW)
                }
              }
              public var GPIO27_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_HIGH)
                }
              }
              public var GPIO27_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_LOW)
                }
              }
              public var GPIO27_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_HIGH)
                }
              }
              public var GPIO27_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_LOW)
                }
              }
              public var GPIO26_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_HIGH)
                }
              }
              public var GPIO26_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_LOW)
                }
              }
              public var GPIO26_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_HIGH)
                }
              }
              public var GPIO26_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_LOW)
                }
              }
              public var GPIO25_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_HIGH)
                }
              }
              public var GPIO25_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_LOW)
                }
              }
              public var GPIO25_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_HIGH)
                }
              }
              public var GPIO25_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_LOW)
                }
              }
              public var GPIO24_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_HIGH)
                }
              }
              public var GPIO24_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_LOW)
                }
              }
              public var GPIO24_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_HIGH)
                }
              }
              public var GPIO24_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_LOW)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = INTR3_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }
                public var GPIO29_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO29_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO29_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO29_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO29_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO29_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO29_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO29_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO28_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO28_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO27_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO27_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO26_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO26_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO25_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO25_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_EDGE_HIGH: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO24_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_EDGE_LOW: Bool {
                @available(*, deprecated, message: "API misuse; read from write view returns the value to be written, not the value initially read.")
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO24_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Enable for proc0
    public var PROC0_INTE0: Register<PROC0_INTE0_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0100), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0100))
          #endif
        }
    }
    public struct PROC0_INTE0_Descriptor {
        @available(*, unavailable)
        public var GPIO7_EDGE_HIGH: GPIO7_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_EDGE_LOW: GPIO7_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_HIGH: GPIO7_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_LOW: GPIO7_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_HIGH: GPIO6_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_LOW: GPIO6_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_HIGH: GPIO6_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_LOW: GPIO6_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_HIGH: GPIO5_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_LOW: GPIO5_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_HIGH: GPIO5_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_LOW: GPIO5_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_HIGH: GPIO4_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_LOW: GPIO4_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_HIGH: GPIO4_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_LOW: GPIO4_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_HIGH: GPIO3_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_LOW: GPIO3_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_HIGH: GPIO3_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_LOW: GPIO3_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_HIGH: GPIO2_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_LOW: GPIO2_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_HIGH: GPIO2_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_LOW: GPIO2_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_HIGH: GPIO1_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_LOW: GPIO1_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_HIGH: GPIO1_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_LOW: GPIO1_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_HIGH: GPIO0_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_LOW: GPIO0_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_HIGH: GPIO0_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_LOW: GPIO0_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO7_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO7_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO7_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO7_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO6_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO6_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO6_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO6_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO5_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO5_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO5_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO5_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO4_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO4_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO4_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO4_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO3_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO3_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO3_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO3_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO2_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO2_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO2_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO2_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO1_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO1_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO1_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO1_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO0_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO0_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO0_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO0_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC0_INTE0_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO7_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO7_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO7_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO7_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = PROC0_INTE0_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO7_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO7_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO7_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO7_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO7_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO7_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO7_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO7_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO7_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO7_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO7_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO7_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO6_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO6_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO6_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO6_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO5_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO5_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO5_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO5_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO4_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO4_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO4_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO4_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO3_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO3_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO3_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO3_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO2_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO2_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO2_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO2_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO1_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO1_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO1_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO1_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO0_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO0_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO0_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO0_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Enable for proc0
    public var PROC0_INTE1: Register<PROC0_INTE1_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0104), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0104))
          #endif
        }
    }
    public struct PROC0_INTE1_Descriptor {
        @available(*, unavailable)
        public var GPIO15_EDGE_HIGH: GPIO15_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_EDGE_LOW: GPIO15_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_HIGH: GPIO15_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_LOW: GPIO15_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_HIGH: GPIO14_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_LOW: GPIO14_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_HIGH: GPIO14_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_LOW: GPIO14_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_HIGH: GPIO13_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_LOW: GPIO13_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_HIGH: GPIO13_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_LOW: GPIO13_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_HIGH: GPIO12_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_LOW: GPIO12_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_HIGH: GPIO12_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_LOW: GPIO12_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_HIGH: GPIO11_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_LOW: GPIO11_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_HIGH: GPIO11_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_LOW: GPIO11_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_HIGH: GPIO10_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_LOW: GPIO10_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_HIGH: GPIO10_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_LOW: GPIO10_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_HIGH: GPIO9_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_LOW: GPIO9_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_HIGH: GPIO9_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_LOW: GPIO9_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_HIGH: GPIO8_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_LOW: GPIO8_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_HIGH: GPIO8_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_LOW: GPIO8_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO15_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO15_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO15_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO15_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO14_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO14_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO14_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO14_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO13_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO13_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO13_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO13_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO12_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO12_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO12_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO12_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO11_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO11_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO11_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO11_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO10_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO10_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO10_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO10_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO9_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO9_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO9_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO9_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO8_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO8_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO8_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO8_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC0_INTE1_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO15_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO15_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO15_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO15_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = PROC0_INTE1_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO15_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO15_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO15_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO15_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO15_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO15_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO15_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO15_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO15_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO15_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO15_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO15_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO14_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO14_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO14_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO14_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO13_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO13_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO13_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO13_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO12_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO12_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO12_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO12_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO11_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO11_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO11_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO11_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO10_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO10_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO10_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO10_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO9_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO9_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO9_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO9_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO8_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO8_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO8_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO8_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Enable for proc0
    public var PROC0_INTE2: Register<PROC0_INTE2_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0108), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0108))
          #endif
        }
    }
    public struct PROC0_INTE2_Descriptor {
        @available(*, unavailable)
        public var GPIO23_EDGE_HIGH: GPIO23_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_EDGE_LOW: GPIO23_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_HIGH: GPIO23_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_LOW: GPIO23_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_HIGH: GPIO22_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_LOW: GPIO22_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_HIGH: GPIO22_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_LOW: GPIO22_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_HIGH: GPIO21_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_LOW: GPIO21_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_HIGH: GPIO21_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_LOW: GPIO21_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_HIGH: GPIO20_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_LOW: GPIO20_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_HIGH: GPIO20_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_LOW: GPIO20_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_HIGH: GPIO19_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_LOW: GPIO19_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_HIGH: GPIO19_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_LOW: GPIO19_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_HIGH: GPIO18_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_LOW: GPIO18_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_HIGH: GPIO18_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_LOW: GPIO18_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_HIGH: GPIO17_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_LOW: GPIO17_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_HIGH: GPIO17_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_LOW: GPIO17_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_HIGH: GPIO16_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_LOW: GPIO16_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_HIGH: GPIO16_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_LOW: GPIO16_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO23_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO23_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO23_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO23_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO22_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO22_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO22_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO22_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO21_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO21_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO21_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO21_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO20_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO20_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO20_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO20_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO19_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO19_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO19_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO19_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO18_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO18_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO18_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO18_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO17_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO17_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO17_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO17_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO16_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO16_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO16_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO16_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC0_INTE2_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO23_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO23_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO23_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO23_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = PROC0_INTE2_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO23_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO23_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO23_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO23_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO23_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO23_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO23_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO23_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO23_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO23_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO23_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO23_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO22_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO22_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO22_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO22_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO21_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO21_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO21_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO21_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO20_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO20_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO20_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO20_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO19_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO19_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO19_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO19_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO18_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO18_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO18_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO18_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO17_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO17_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO17_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO17_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO16_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO16_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO16_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO16_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Enable for proc0
    public var PROC0_INTE3: Register<PROC0_INTE3_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x010c), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x010c))
          #endif
        }
    }
    public struct PROC0_INTE3_Descriptor {
        @available(*, unavailable)
        public var GPIO29_EDGE_HIGH: GPIO29_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_EDGE_LOW: GPIO29_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_HIGH: GPIO29_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_LOW: GPIO29_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_HIGH: GPIO28_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_LOW: GPIO28_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_HIGH: GPIO28_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_LOW: GPIO28_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_HIGH: GPIO27_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_LOW: GPIO27_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_HIGH: GPIO27_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_LOW: GPIO27_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_HIGH: GPIO26_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_LOW: GPIO26_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_HIGH: GPIO26_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_LOW: GPIO26_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_HIGH: GPIO25_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_LOW: GPIO25_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_HIGH: GPIO25_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_LOW: GPIO25_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_HIGH: GPIO24_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_LOW: GPIO24_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_HIGH: GPIO24_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_LOW: GPIO24_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO29_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO29_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO29_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO29_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO28_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO28_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO28_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO28_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO27_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO27_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO27_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO27_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO26_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO26_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO26_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO26_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO25_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO25_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO25_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO25_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO24_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO24_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO24_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO24_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC0_INTE3_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO29_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO29_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO29_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO29_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = PROC0_INTE3_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO29_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO29_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO29_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO29_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO29_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO29_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO29_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO29_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO29_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO29_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO29_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO29_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO28_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO28_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO28_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO28_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO27_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO27_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO27_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO27_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO26_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO26_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO26_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO26_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO25_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO25_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO25_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO25_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO24_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO24_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO24_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO24_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Force for proc0
    public var PROC0_INTF0: Register<PROC0_INTF0_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0110), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0110))
          #endif
        }
    }
    public struct PROC0_INTF0_Descriptor {
        @available(*, unavailable)
        public var GPIO7_EDGE_HIGH: GPIO7_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_EDGE_LOW: GPIO7_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_HIGH: GPIO7_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_LOW: GPIO7_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_HIGH: GPIO6_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_LOW: GPIO6_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_HIGH: GPIO6_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_LOW: GPIO6_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_HIGH: GPIO5_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_LOW: GPIO5_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_HIGH: GPIO5_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_LOW: GPIO5_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_HIGH: GPIO4_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_LOW: GPIO4_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_HIGH: GPIO4_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_LOW: GPIO4_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_HIGH: GPIO3_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_LOW: GPIO3_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_HIGH: GPIO3_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_LOW: GPIO3_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_HIGH: GPIO2_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_LOW: GPIO2_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_HIGH: GPIO2_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_LOW: GPIO2_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_HIGH: GPIO1_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_LOW: GPIO1_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_HIGH: GPIO1_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_LOW: GPIO1_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_HIGH: GPIO0_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_LOW: GPIO0_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_HIGH: GPIO0_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_LOW: GPIO0_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO7_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO7_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO7_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO7_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO6_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO6_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO6_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO6_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO5_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO5_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO5_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO5_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO4_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO4_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO4_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO4_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO3_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO3_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO3_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO3_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO2_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO2_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO2_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO2_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO1_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO1_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO1_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO1_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO0_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO0_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO0_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO0_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC0_INTF0_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO7_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO7_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO7_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO7_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = PROC0_INTF0_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO7_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO7_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO7_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO7_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO7_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO7_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO7_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO7_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO7_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO7_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO7_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO7_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO6_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO6_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO6_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO6_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO5_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO5_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO5_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO5_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO4_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO4_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO4_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO4_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO3_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO3_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO3_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO3_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO2_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO2_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO2_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO2_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO1_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO1_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO1_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO1_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO0_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO0_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO0_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO0_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Force for proc0
    public var PROC0_INTF1: Register<PROC0_INTF1_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0114), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0114))
          #endif
        }
    }
    public struct PROC0_INTF1_Descriptor {
        @available(*, unavailable)
        public var GPIO15_EDGE_HIGH: GPIO15_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_EDGE_LOW: GPIO15_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_HIGH: GPIO15_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_LOW: GPIO15_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_HIGH: GPIO14_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_LOW: GPIO14_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_HIGH: GPIO14_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_LOW: GPIO14_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_HIGH: GPIO13_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_LOW: GPIO13_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_HIGH: GPIO13_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_LOW: GPIO13_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_HIGH: GPIO12_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_LOW: GPIO12_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_HIGH: GPIO12_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_LOW: GPIO12_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_HIGH: GPIO11_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_LOW: GPIO11_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_HIGH: GPIO11_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_LOW: GPIO11_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_HIGH: GPIO10_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_LOW: GPIO10_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_HIGH: GPIO10_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_LOW: GPIO10_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_HIGH: GPIO9_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_LOW: GPIO9_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_HIGH: GPIO9_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_LOW: GPIO9_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_HIGH: GPIO8_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_LOW: GPIO8_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_HIGH: GPIO8_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_LOW: GPIO8_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO15_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO15_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO15_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO15_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO14_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO14_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO14_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO14_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO13_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO13_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO13_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO13_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO12_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO12_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO12_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO12_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO11_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO11_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO11_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO11_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO10_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO10_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO10_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO10_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO9_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO9_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO9_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO9_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO8_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO8_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO8_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO8_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC0_INTF1_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO15_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO15_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO15_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO15_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = PROC0_INTF1_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO15_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO15_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO15_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO15_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO15_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO15_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO15_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO15_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO15_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO15_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO15_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO15_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO14_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO14_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO14_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO14_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO13_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO13_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO13_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO13_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO12_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO12_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO12_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO12_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO11_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO11_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO11_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO11_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO10_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO10_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO10_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO10_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO9_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO9_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO9_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO9_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO8_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO8_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO8_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO8_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Force for proc0
    public var PROC0_INTF2: Register<PROC0_INTF2_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0118), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0118))
          #endif
        }
    }
    public struct PROC0_INTF2_Descriptor {
        @available(*, unavailable)
        public var GPIO23_EDGE_HIGH: GPIO23_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_EDGE_LOW: GPIO23_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_HIGH: GPIO23_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_LOW: GPIO23_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_HIGH: GPIO22_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_LOW: GPIO22_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_HIGH: GPIO22_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_LOW: GPIO22_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_HIGH: GPIO21_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_LOW: GPIO21_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_HIGH: GPIO21_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_LOW: GPIO21_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_HIGH: GPIO20_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_LOW: GPIO20_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_HIGH: GPIO20_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_LOW: GPIO20_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_HIGH: GPIO19_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_LOW: GPIO19_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_HIGH: GPIO19_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_LOW: GPIO19_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_HIGH: GPIO18_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_LOW: GPIO18_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_HIGH: GPIO18_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_LOW: GPIO18_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_HIGH: GPIO17_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_LOW: GPIO17_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_HIGH: GPIO17_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_LOW: GPIO17_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_HIGH: GPIO16_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_LOW: GPIO16_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_HIGH: GPIO16_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_LOW: GPIO16_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO23_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO23_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO23_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO23_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO22_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO22_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO22_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO22_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO21_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO21_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO21_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO21_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO20_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO20_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO20_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO20_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO19_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO19_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO19_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO19_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO18_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO18_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO18_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO18_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO17_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO17_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO17_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO17_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO16_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO16_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO16_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO16_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC0_INTF2_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO23_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO23_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO23_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO23_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = PROC0_INTF2_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO23_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO23_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO23_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO23_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO23_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO23_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO23_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO23_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO23_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO23_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO23_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO23_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO22_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO22_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO22_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO22_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO21_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO21_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO21_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO21_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO20_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO20_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO20_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO20_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO19_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO19_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO19_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO19_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO18_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO18_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO18_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO18_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO17_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO17_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO17_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO17_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO16_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO16_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO16_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO16_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Force for proc0
    public var PROC0_INTF3: Register<PROC0_INTF3_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x011c), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x011c))
          #endif
        }
    }
    public struct PROC0_INTF3_Descriptor {
        @available(*, unavailable)
        public var GPIO29_EDGE_HIGH: GPIO29_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_EDGE_LOW: GPIO29_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_HIGH: GPIO29_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_LOW: GPIO29_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_HIGH: GPIO28_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_LOW: GPIO28_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_HIGH: GPIO28_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_LOW: GPIO28_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_HIGH: GPIO27_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_LOW: GPIO27_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_HIGH: GPIO27_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_LOW: GPIO27_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_HIGH: GPIO26_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_LOW: GPIO26_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_HIGH: GPIO26_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_LOW: GPIO26_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_HIGH: GPIO25_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_LOW: GPIO25_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_HIGH: GPIO25_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_LOW: GPIO25_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_HIGH: GPIO24_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_LOW: GPIO24_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_HIGH: GPIO24_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_LOW: GPIO24_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO29_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO29_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO29_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO29_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO28_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO28_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO28_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO28_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO27_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO27_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO27_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO27_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO26_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO26_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO26_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO26_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO25_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO25_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO25_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO25_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO24_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO24_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO24_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO24_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC0_INTF3_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO29_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO29_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO29_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO29_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = PROC0_INTF3_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO29_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO29_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO29_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO29_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO29_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO29_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO29_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO29_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO29_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO29_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO29_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO29_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO28_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO28_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO28_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO28_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO27_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO27_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO27_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO27_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO26_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO26_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO26_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO26_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO25_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO25_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO25_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO25_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO24_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO24_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO24_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO24_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt status after masking & forcing for proc0
    public var PROC0_INTS0: Register<PROC0_INTS0_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0120), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0120))
          #endif
        }
    }
    public struct PROC0_INTS0_Descriptor {
        @available(*, unavailable)
        public var GPIO7_EDGE_HIGH: GPIO7_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_EDGE_LOW: GPIO7_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_HIGH: GPIO7_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_LOW: GPIO7_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_HIGH: GPIO6_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_LOW: GPIO6_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_HIGH: GPIO6_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_LOW: GPIO6_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_HIGH: GPIO5_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_LOW: GPIO5_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_HIGH: GPIO5_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_LOW: GPIO5_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_HIGH: GPIO4_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_LOW: GPIO4_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_HIGH: GPIO4_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_LOW: GPIO4_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_HIGH: GPIO3_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_LOW: GPIO3_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_HIGH: GPIO3_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_LOW: GPIO3_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_HIGH: GPIO2_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_LOW: GPIO2_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_HIGH: GPIO2_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_LOW: GPIO2_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_HIGH: GPIO1_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_LOW: GPIO1_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_HIGH: GPIO1_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_LOW: GPIO1_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_HIGH: GPIO0_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_LOW: GPIO0_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_HIGH: GPIO0_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_LOW: GPIO0_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO7_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO7_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO7_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO7_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO6_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO6_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO6_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO6_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO5_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO5_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO5_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO5_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO4_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO4_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO4_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO4_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO3_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO3_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO3_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO3_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO2_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO2_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO2_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO2_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO1_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO1_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO1_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO1_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO0_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO0_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO0_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO0_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC0_INTS0_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var GPIO7_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO7_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO7_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO7_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = PROC0_INTS0_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var GPIO7_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO7_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO7_EDGE_HIGH)
                }
                }
              public var GPIO7_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_EDGE_LOW)
                }
              }
              public var GPIO7_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_HIGH)
                }
              }
              public var GPIO7_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_LOW)
                }
              }
              public var GPIO6_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_HIGH)
                }
              }
              public var GPIO6_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_LOW)
                }
              }
              public var GPIO6_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_HIGH)
                }
              }
              public var GPIO6_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_LOW)
                }
              }
              public var GPIO5_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_HIGH)
                }
              }
              public var GPIO5_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_LOW)
                }
              }
              public var GPIO5_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_HIGH)
                }
              }
              public var GPIO5_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_LOW)
                }
              }
              public var GPIO4_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_HIGH)
                }
              }
              public var GPIO4_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_LOW)
                }
              }
              public var GPIO4_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_HIGH)
                }
              }
              public var GPIO4_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_LOW)
                }
              }
              public var GPIO3_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_HIGH)
                }
              }
              public var GPIO3_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_LOW)
                }
              }
              public var GPIO3_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_HIGH)
                }
              }
              public var GPIO3_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_LOW)
                }
              }
              public var GPIO2_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_HIGH)
                }
              }
              public var GPIO2_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_LOW)
                }
              }
              public var GPIO2_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_HIGH)
                }
              }
              public var GPIO2_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_LOW)
                }
              }
              public var GPIO1_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_HIGH)
                }
              }
              public var GPIO1_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_LOW)
                }
              }
              public var GPIO1_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_HIGH)
                }
              }
              public var GPIO1_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_LOW)
                }
              }
              public var GPIO0_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_HIGH)
                }
              }
              public var GPIO0_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_LOW)
                }
              }
              public var GPIO0_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_HIGH)
                }
              }
              public var GPIO0_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_LOW)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = PROC0_INTS0_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// Interrupt status after masking & forcing for proc0
    public var PROC0_INTS1: Register<PROC0_INTS1_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0124), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0124))
          #endif
        }
    }
    public struct PROC0_INTS1_Descriptor {
        @available(*, unavailable)
        public var GPIO15_EDGE_HIGH: GPIO15_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_EDGE_LOW: GPIO15_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_HIGH: GPIO15_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_LOW: GPIO15_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_HIGH: GPIO14_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_LOW: GPIO14_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_HIGH: GPIO14_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_LOW: GPIO14_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_HIGH: GPIO13_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_LOW: GPIO13_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_HIGH: GPIO13_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_LOW: GPIO13_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_HIGH: GPIO12_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_LOW: GPIO12_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_HIGH: GPIO12_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_LOW: GPIO12_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_HIGH: GPIO11_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_LOW: GPIO11_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_HIGH: GPIO11_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_LOW: GPIO11_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_HIGH: GPIO10_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_LOW: GPIO10_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_HIGH: GPIO10_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_LOW: GPIO10_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_HIGH: GPIO9_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_LOW: GPIO9_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_HIGH: GPIO9_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_LOW: GPIO9_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_HIGH: GPIO8_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_LOW: GPIO8_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_HIGH: GPIO8_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_LOW: GPIO8_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO15_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO15_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO15_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO15_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO14_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO14_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO14_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO14_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO13_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO13_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO13_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO13_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO12_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO12_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO12_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO12_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO11_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO11_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO11_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO11_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO10_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO10_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO10_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO10_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO9_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO9_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO9_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO9_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO8_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO8_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO8_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO8_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC0_INTS1_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var GPIO15_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO15_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO15_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO15_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = PROC0_INTS1_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var GPIO15_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO15_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO15_EDGE_HIGH)
                }
                }
              public var GPIO15_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_EDGE_LOW)
                }
              }
              public var GPIO15_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_HIGH)
                }
              }
              public var GPIO15_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_LOW)
                }
              }
              public var GPIO14_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_HIGH)
                }
              }
              public var GPIO14_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_LOW)
                }
              }
              public var GPIO14_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_HIGH)
                }
              }
              public var GPIO14_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_LOW)
                }
              }
              public var GPIO13_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_HIGH)
                }
              }
              public var GPIO13_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_LOW)
                }
              }
              public var GPIO13_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_HIGH)
                }
              }
              public var GPIO13_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_LOW)
                }
              }
              public var GPIO12_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_HIGH)
                }
              }
              public var GPIO12_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_LOW)
                }
              }
              public var GPIO12_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_HIGH)
                }
              }
              public var GPIO12_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_LOW)
                }
              }
              public var GPIO11_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_HIGH)
                }
              }
              public var GPIO11_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_LOW)
                }
              }
              public var GPIO11_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_HIGH)
                }
              }
              public var GPIO11_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_LOW)
                }
              }
              public var GPIO10_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_HIGH)
                }
              }
              public var GPIO10_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_LOW)
                }
              }
              public var GPIO10_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_HIGH)
                }
              }
              public var GPIO10_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_LOW)
                }
              }
              public var GPIO9_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_HIGH)
                }
              }
              public var GPIO9_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_LOW)
                }
              }
              public var GPIO9_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_HIGH)
                }
              }
              public var GPIO9_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_LOW)
                }
              }
              public var GPIO8_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_HIGH)
                }
              }
              public var GPIO8_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_LOW)
                }
              }
              public var GPIO8_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_HIGH)
                }
              }
              public var GPIO8_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_LOW)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = PROC0_INTS1_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// Interrupt status after masking & forcing for proc0
    public var PROC0_INTS2: Register<PROC0_INTS2_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0128), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0128))
          #endif
        }
    }
    public struct PROC0_INTS2_Descriptor {
        @available(*, unavailable)
        public var GPIO23_EDGE_HIGH: GPIO23_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_EDGE_LOW: GPIO23_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_HIGH: GPIO23_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_LOW: GPIO23_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_HIGH: GPIO22_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_LOW: GPIO22_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_HIGH: GPIO22_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_LOW: GPIO22_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_HIGH: GPIO21_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_LOW: GPIO21_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_HIGH: GPIO21_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_LOW: GPIO21_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_HIGH: GPIO20_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_LOW: GPIO20_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_HIGH: GPIO20_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_LOW: GPIO20_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_HIGH: GPIO19_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_LOW: GPIO19_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_HIGH: GPIO19_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_LOW: GPIO19_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_HIGH: GPIO18_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_LOW: GPIO18_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_HIGH: GPIO18_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_LOW: GPIO18_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_HIGH: GPIO17_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_LOW: GPIO17_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_HIGH: GPIO17_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_LOW: GPIO17_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_HIGH: GPIO16_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_LOW: GPIO16_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_HIGH: GPIO16_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_LOW: GPIO16_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO23_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO23_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO23_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO23_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO22_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO22_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO22_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO22_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO21_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO21_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO21_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO21_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO20_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO20_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO20_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO20_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO19_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO19_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO19_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO19_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO18_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO18_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO18_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO18_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO17_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO17_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO17_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO17_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO16_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO16_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO16_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO16_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC0_INTS2_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var GPIO23_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO23_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO23_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO23_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = PROC0_INTS2_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var GPIO23_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO23_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO23_EDGE_HIGH)
                }
                }
              public var GPIO23_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_EDGE_LOW)
                }
              }
              public var GPIO23_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_HIGH)
                }
              }
              public var GPIO23_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_LOW)
                }
              }
              public var GPIO22_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_HIGH)
                }
              }
              public var GPIO22_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_LOW)
                }
              }
              public var GPIO22_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_HIGH)
                }
              }
              public var GPIO22_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_LOW)
                }
              }
              public var GPIO21_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_HIGH)
                }
              }
              public var GPIO21_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_LOW)
                }
              }
              public var GPIO21_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_HIGH)
                }
              }
              public var GPIO21_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_LOW)
                }
              }
              public var GPIO20_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_HIGH)
                }
              }
              public var GPIO20_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_LOW)
                }
              }
              public var GPIO20_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_HIGH)
                }
              }
              public var GPIO20_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_LOW)
                }
              }
              public var GPIO19_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_HIGH)
                }
              }
              public var GPIO19_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_LOW)
                }
              }
              public var GPIO19_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_HIGH)
                }
              }
              public var GPIO19_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_LOW)
                }
              }
              public var GPIO18_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_HIGH)
                }
              }
              public var GPIO18_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_LOW)
                }
              }
              public var GPIO18_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_HIGH)
                }
              }
              public var GPIO18_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_LOW)
                }
              }
              public var GPIO17_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_HIGH)
                }
              }
              public var GPIO17_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_LOW)
                }
              }
              public var GPIO17_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_HIGH)
                }
              }
              public var GPIO17_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_LOW)
                }
              }
              public var GPIO16_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_HIGH)
                }
              }
              public var GPIO16_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_LOW)
                }
              }
              public var GPIO16_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_HIGH)
                }
              }
              public var GPIO16_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_LOW)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = PROC0_INTS2_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// Interrupt status after masking & forcing for proc0
    public var PROC0_INTS3: Register<PROC0_INTS3_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x012c), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x012c))
          #endif
        }
    }
    public struct PROC0_INTS3_Descriptor {
        @available(*, unavailable)
        public var GPIO29_EDGE_HIGH: GPIO29_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_EDGE_LOW: GPIO29_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_HIGH: GPIO29_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_LOW: GPIO29_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_HIGH: GPIO28_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_LOW: GPIO28_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_HIGH: GPIO28_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_LOW: GPIO28_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_HIGH: GPIO27_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_LOW: GPIO27_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_HIGH: GPIO27_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_LOW: GPIO27_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_HIGH: GPIO26_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_LOW: GPIO26_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_HIGH: GPIO26_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_LOW: GPIO26_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_HIGH: GPIO25_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_LOW: GPIO25_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_HIGH: GPIO25_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_LOW: GPIO25_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_HIGH: GPIO24_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_LOW: GPIO24_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_HIGH: GPIO24_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_LOW: GPIO24_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO29_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO29_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO29_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO29_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO28_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO28_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO28_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO28_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO27_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO27_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO27_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO27_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO26_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO26_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO26_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO26_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO25_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO25_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO25_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO25_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO24_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO24_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO24_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO24_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC0_INTS3_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var GPIO29_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO29_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO29_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO29_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = PROC0_INTS3_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var GPIO29_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO29_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO29_EDGE_HIGH)
                }
                }
              public var GPIO29_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_EDGE_LOW)
                }
              }
              public var GPIO29_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_HIGH)
                }
              }
              public var GPIO29_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_LOW)
                }
              }
              public var GPIO28_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_HIGH)
                }
              }
              public var GPIO28_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_LOW)
                }
              }
              public var GPIO28_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_HIGH)
                }
              }
              public var GPIO28_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_LOW)
                }
              }
              public var GPIO27_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_HIGH)
                }
              }
              public var GPIO27_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_LOW)
                }
              }
              public var GPIO27_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_HIGH)
                }
              }
              public var GPIO27_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_LOW)
                }
              }
              public var GPIO26_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_HIGH)
                }
              }
              public var GPIO26_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_LOW)
                }
              }
              public var GPIO26_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_HIGH)
                }
              }
              public var GPIO26_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_LOW)
                }
              }
              public var GPIO25_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_HIGH)
                }
              }
              public var GPIO25_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_LOW)
                }
              }
              public var GPIO25_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_HIGH)
                }
              }
              public var GPIO25_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_LOW)
                }
              }
              public var GPIO24_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_HIGH)
                }
              }
              public var GPIO24_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_LOW)
                }
              }
              public var GPIO24_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_HIGH)
                }
              }
              public var GPIO24_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_LOW)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = PROC0_INTS3_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// Interrupt Enable for proc1
    public var PROC1_INTE0: Register<PROC1_INTE0_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0130), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0130))
          #endif
        }
    }
    public struct PROC1_INTE0_Descriptor {
        @available(*, unavailable)
        public var GPIO7_EDGE_HIGH: GPIO7_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_EDGE_LOW: GPIO7_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_HIGH: GPIO7_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_LOW: GPIO7_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_HIGH: GPIO6_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_LOW: GPIO6_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_HIGH: GPIO6_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_LOW: GPIO6_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_HIGH: GPIO5_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_LOW: GPIO5_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_HIGH: GPIO5_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_LOW: GPIO5_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_HIGH: GPIO4_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_LOW: GPIO4_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_HIGH: GPIO4_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_LOW: GPIO4_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_HIGH: GPIO3_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_LOW: GPIO3_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_HIGH: GPIO3_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_LOW: GPIO3_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_HIGH: GPIO2_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_LOW: GPIO2_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_HIGH: GPIO2_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_LOW: GPIO2_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_HIGH: GPIO1_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_LOW: GPIO1_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_HIGH: GPIO1_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_LOW: GPIO1_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_HIGH: GPIO0_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_LOW: GPIO0_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_HIGH: GPIO0_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_LOW: GPIO0_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO7_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO7_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO7_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO7_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO6_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO6_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO6_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO6_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO5_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO5_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO5_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO5_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO4_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO4_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO4_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO4_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO3_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO3_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO3_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO3_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO2_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO2_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO2_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO2_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO1_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO1_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO1_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO1_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO0_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO0_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO0_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO0_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC1_INTE0_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO7_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO7_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO7_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO7_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = PROC1_INTE0_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO7_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO7_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO7_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO7_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO7_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO7_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO7_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO7_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO7_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO7_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO7_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO7_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO6_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO6_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO6_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO6_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO5_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO5_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO5_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO5_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO4_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO4_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO4_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO4_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO3_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO3_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO3_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO3_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO2_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO2_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO2_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO2_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO1_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO1_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO1_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO1_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO0_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO0_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO0_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO0_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Enable for proc1
    public var PROC1_INTE1: Register<PROC1_INTE1_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0134), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0134))
          #endif
        }
    }
    public struct PROC1_INTE1_Descriptor {
        @available(*, unavailable)
        public var GPIO15_EDGE_HIGH: GPIO15_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_EDGE_LOW: GPIO15_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_HIGH: GPIO15_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_LOW: GPIO15_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_HIGH: GPIO14_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_LOW: GPIO14_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_HIGH: GPIO14_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_LOW: GPIO14_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_HIGH: GPIO13_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_LOW: GPIO13_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_HIGH: GPIO13_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_LOW: GPIO13_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_HIGH: GPIO12_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_LOW: GPIO12_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_HIGH: GPIO12_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_LOW: GPIO12_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_HIGH: GPIO11_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_LOW: GPIO11_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_HIGH: GPIO11_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_LOW: GPIO11_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_HIGH: GPIO10_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_LOW: GPIO10_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_HIGH: GPIO10_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_LOW: GPIO10_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_HIGH: GPIO9_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_LOW: GPIO9_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_HIGH: GPIO9_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_LOW: GPIO9_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_HIGH: GPIO8_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_LOW: GPIO8_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_HIGH: GPIO8_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_LOW: GPIO8_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO15_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO15_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO15_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO15_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO14_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO14_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO14_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO14_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO13_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO13_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO13_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO13_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO12_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO12_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO12_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO12_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO11_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO11_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO11_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO11_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO10_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO10_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO10_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO10_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO9_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO9_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO9_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO9_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO8_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO8_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO8_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO8_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC1_INTE1_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO15_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO15_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO15_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO15_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = PROC1_INTE1_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO15_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO15_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO15_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO15_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO15_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO15_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO15_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO15_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO15_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO15_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO15_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO15_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO14_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO14_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO14_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO14_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO13_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO13_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO13_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO13_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO12_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO12_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO12_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO12_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO11_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO11_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO11_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO11_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO10_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO10_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO10_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO10_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO9_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO9_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO9_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO9_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO8_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO8_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO8_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO8_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Enable for proc1
    public var PROC1_INTE2: Register<PROC1_INTE2_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0138), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0138))
          #endif
        }
    }
    public struct PROC1_INTE2_Descriptor {
        @available(*, unavailable)
        public var GPIO23_EDGE_HIGH: GPIO23_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_EDGE_LOW: GPIO23_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_HIGH: GPIO23_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_LOW: GPIO23_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_HIGH: GPIO22_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_LOW: GPIO22_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_HIGH: GPIO22_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_LOW: GPIO22_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_HIGH: GPIO21_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_LOW: GPIO21_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_HIGH: GPIO21_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_LOW: GPIO21_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_HIGH: GPIO20_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_LOW: GPIO20_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_HIGH: GPIO20_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_LOW: GPIO20_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_HIGH: GPIO19_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_LOW: GPIO19_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_HIGH: GPIO19_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_LOW: GPIO19_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_HIGH: GPIO18_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_LOW: GPIO18_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_HIGH: GPIO18_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_LOW: GPIO18_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_HIGH: GPIO17_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_LOW: GPIO17_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_HIGH: GPIO17_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_LOW: GPIO17_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_HIGH: GPIO16_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_LOW: GPIO16_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_HIGH: GPIO16_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_LOW: GPIO16_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO23_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO23_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO23_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO23_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO22_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO22_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO22_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO22_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO21_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO21_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO21_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO21_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO20_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO20_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO20_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO20_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO19_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO19_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO19_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO19_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO18_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO18_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO18_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO18_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO17_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO17_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO17_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO17_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO16_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO16_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO16_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO16_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC1_INTE2_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO23_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO23_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO23_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO23_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = PROC1_INTE2_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO23_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO23_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO23_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO23_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO23_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO23_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO23_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO23_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO23_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO23_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO23_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO23_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO22_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO22_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO22_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO22_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO21_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO21_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO21_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO21_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO20_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO20_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO20_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO20_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO19_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO19_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO19_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO19_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO18_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO18_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO18_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO18_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO17_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO17_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO17_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO17_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO16_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO16_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO16_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO16_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Enable for proc1
    public var PROC1_INTE3: Register<PROC1_INTE3_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x013c), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x013c))
          #endif
        }
    }
    public struct PROC1_INTE3_Descriptor {
        @available(*, unavailable)
        public var GPIO29_EDGE_HIGH: GPIO29_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_EDGE_LOW: GPIO29_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_HIGH: GPIO29_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_LOW: GPIO29_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_HIGH: GPIO28_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_LOW: GPIO28_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_HIGH: GPIO28_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_LOW: GPIO28_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_HIGH: GPIO27_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_LOW: GPIO27_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_HIGH: GPIO27_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_LOW: GPIO27_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_HIGH: GPIO26_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_LOW: GPIO26_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_HIGH: GPIO26_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_LOW: GPIO26_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_HIGH: GPIO25_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_LOW: GPIO25_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_HIGH: GPIO25_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_LOW: GPIO25_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_HIGH: GPIO24_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_LOW: GPIO24_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_HIGH: GPIO24_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_LOW: GPIO24_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO29_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO29_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO29_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO29_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO28_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO28_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO28_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO28_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO27_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO27_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO27_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO27_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO26_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO26_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO26_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO26_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO25_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO25_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO25_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO25_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO24_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO24_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO24_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO24_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC1_INTE3_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO29_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO29_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO29_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO29_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = PROC1_INTE3_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO29_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO29_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO29_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO29_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO29_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO29_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO29_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO29_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO29_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO29_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO29_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO29_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO28_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO28_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO28_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO28_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO27_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO27_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO27_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO27_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO26_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO26_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO26_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO26_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO25_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO25_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO25_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO25_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO24_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO24_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO24_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO24_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Force for proc1
    public var PROC1_INTF0: Register<PROC1_INTF0_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0140), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0140))
          #endif
        }
    }
    public struct PROC1_INTF0_Descriptor {
        @available(*, unavailable)
        public var GPIO7_EDGE_HIGH: GPIO7_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_EDGE_LOW: GPIO7_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_HIGH: GPIO7_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_LOW: GPIO7_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_HIGH: GPIO6_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_LOW: GPIO6_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_HIGH: GPIO6_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_LOW: GPIO6_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_HIGH: GPIO5_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_LOW: GPIO5_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_HIGH: GPIO5_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_LOW: GPIO5_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_HIGH: GPIO4_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_LOW: GPIO4_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_HIGH: GPIO4_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_LOW: GPIO4_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_HIGH: GPIO3_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_LOW: GPIO3_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_HIGH: GPIO3_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_LOW: GPIO3_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_HIGH: GPIO2_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_LOW: GPIO2_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_HIGH: GPIO2_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_LOW: GPIO2_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_HIGH: GPIO1_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_LOW: GPIO1_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_HIGH: GPIO1_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_LOW: GPIO1_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_HIGH: GPIO0_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_LOW: GPIO0_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_HIGH: GPIO0_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_LOW: GPIO0_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO7_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO7_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO7_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO7_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO6_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO6_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO6_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO6_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO5_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO5_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO5_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO5_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO4_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO4_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO4_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO4_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO3_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO3_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO3_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO3_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO2_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO2_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO2_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO2_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO1_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO1_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO1_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO1_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO0_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO0_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO0_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO0_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC1_INTF0_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO7_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO7_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO7_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO7_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = PROC1_INTF0_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO7_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO7_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO7_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO7_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO7_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO7_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO7_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO7_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO7_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO7_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO7_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO7_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO6_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO6_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO6_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO6_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO5_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO5_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO5_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO5_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO4_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO4_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO4_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO4_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO3_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO3_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO3_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO3_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO2_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO2_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO2_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO2_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO1_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO1_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO1_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO1_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO0_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO0_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO0_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO0_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Force for proc1
    public var PROC1_INTF1: Register<PROC1_INTF1_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0144), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0144))
          #endif
        }
    }
    public struct PROC1_INTF1_Descriptor {
        @available(*, unavailable)
        public var GPIO15_EDGE_HIGH: GPIO15_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_EDGE_LOW: GPIO15_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_HIGH: GPIO15_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_LOW: GPIO15_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_HIGH: GPIO14_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_LOW: GPIO14_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_HIGH: GPIO14_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_LOW: GPIO14_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_HIGH: GPIO13_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_LOW: GPIO13_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_HIGH: GPIO13_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_LOW: GPIO13_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_HIGH: GPIO12_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_LOW: GPIO12_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_HIGH: GPIO12_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_LOW: GPIO12_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_HIGH: GPIO11_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_LOW: GPIO11_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_HIGH: GPIO11_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_LOW: GPIO11_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_HIGH: GPIO10_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_LOW: GPIO10_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_HIGH: GPIO10_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_LOW: GPIO10_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_HIGH: GPIO9_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_LOW: GPIO9_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_HIGH: GPIO9_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_LOW: GPIO9_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_HIGH: GPIO8_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_LOW: GPIO8_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_HIGH: GPIO8_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_LOW: GPIO8_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO15_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO15_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO15_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO15_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO14_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO14_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO14_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO14_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO13_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO13_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO13_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO13_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO12_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO12_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO12_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO12_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO11_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO11_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO11_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO11_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO10_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO10_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO10_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO10_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO9_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO9_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO9_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO9_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO8_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO8_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO8_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO8_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC1_INTF1_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO15_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO15_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO15_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO15_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = PROC1_INTF1_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO15_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO15_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO15_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO15_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO15_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO15_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO15_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO15_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO15_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO15_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO15_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO15_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO14_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO14_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO14_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO14_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO13_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO13_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO13_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO13_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO12_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO12_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO12_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO12_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO11_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO11_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO11_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO11_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO10_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO10_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO10_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO10_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO9_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO9_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO9_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO9_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO8_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO8_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO8_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO8_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Force for proc1
    public var PROC1_INTF2: Register<PROC1_INTF2_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0148), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0148))
          #endif
        }
    }
    public struct PROC1_INTF2_Descriptor {
        @available(*, unavailable)
        public var GPIO23_EDGE_HIGH: GPIO23_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_EDGE_LOW: GPIO23_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_HIGH: GPIO23_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_LOW: GPIO23_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_HIGH: GPIO22_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_LOW: GPIO22_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_HIGH: GPIO22_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_LOW: GPIO22_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_HIGH: GPIO21_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_LOW: GPIO21_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_HIGH: GPIO21_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_LOW: GPIO21_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_HIGH: GPIO20_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_LOW: GPIO20_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_HIGH: GPIO20_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_LOW: GPIO20_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_HIGH: GPIO19_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_LOW: GPIO19_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_HIGH: GPIO19_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_LOW: GPIO19_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_HIGH: GPIO18_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_LOW: GPIO18_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_HIGH: GPIO18_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_LOW: GPIO18_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_HIGH: GPIO17_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_LOW: GPIO17_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_HIGH: GPIO17_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_LOW: GPIO17_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_HIGH: GPIO16_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_LOW: GPIO16_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_HIGH: GPIO16_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_LOW: GPIO16_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO23_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO23_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO23_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO23_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO22_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO22_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO22_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO22_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO21_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO21_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO21_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO21_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO20_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO20_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO20_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO20_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO19_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO19_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO19_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO19_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO18_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO18_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO18_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO18_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO17_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO17_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO17_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO17_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO16_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO16_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO16_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO16_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC1_INTF2_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO23_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO23_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO23_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO23_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = PROC1_INTF2_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO23_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO23_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO23_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO23_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO23_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO23_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO23_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO23_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO23_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO23_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO23_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO23_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO22_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO22_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO22_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO22_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO21_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO21_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO21_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO21_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO20_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO20_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO20_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO20_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO19_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO19_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO19_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO19_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO18_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO18_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO18_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO18_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO17_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO17_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO17_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO17_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO16_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO16_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO16_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO16_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Force for proc1
    public var PROC1_INTF3: Register<PROC1_INTF3_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x014c), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x014c))
          #endif
        }
    }
    public struct PROC1_INTF3_Descriptor {
        @available(*, unavailable)
        public var GPIO29_EDGE_HIGH: GPIO29_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_EDGE_LOW: GPIO29_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_HIGH: GPIO29_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_LOW: GPIO29_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_HIGH: GPIO28_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_LOW: GPIO28_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_HIGH: GPIO28_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_LOW: GPIO28_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_HIGH: GPIO27_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_LOW: GPIO27_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_HIGH: GPIO27_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_LOW: GPIO27_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_HIGH: GPIO26_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_LOW: GPIO26_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_HIGH: GPIO26_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_LOW: GPIO26_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_HIGH: GPIO25_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_LOW: GPIO25_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_HIGH: GPIO25_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_LOW: GPIO25_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_HIGH: GPIO24_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_LOW: GPIO24_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_HIGH: GPIO24_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_LOW: GPIO24_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO29_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO29_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO29_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO29_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO28_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO28_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO28_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO28_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO27_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO27_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO27_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO27_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO26_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO26_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO26_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO26_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO25_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO25_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO25_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO25_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO24_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO24_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO24_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO24_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC1_INTF3_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO29_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO29_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO29_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO29_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = PROC1_INTF3_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO29_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO29_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO29_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO29_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO29_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO29_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO29_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO29_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO29_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO29_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO29_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO29_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO28_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO28_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO28_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO28_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO27_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO27_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO27_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO27_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO26_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO26_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO26_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO26_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO25_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO25_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO25_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO25_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO24_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO24_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO24_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO24_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt status after masking & forcing for proc1
    public var PROC1_INTS0: Register<PROC1_INTS0_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0150), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0150))
          #endif
        }
    }
    public struct PROC1_INTS0_Descriptor {
        @available(*, unavailable)
        public var GPIO7_EDGE_HIGH: GPIO7_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_EDGE_LOW: GPIO7_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_HIGH: GPIO7_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_LOW: GPIO7_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_HIGH: GPIO6_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_LOW: GPIO6_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_HIGH: GPIO6_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_LOW: GPIO6_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_HIGH: GPIO5_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_LOW: GPIO5_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_HIGH: GPIO5_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_LOW: GPIO5_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_HIGH: GPIO4_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_LOW: GPIO4_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_HIGH: GPIO4_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_LOW: GPIO4_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_HIGH: GPIO3_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_LOW: GPIO3_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_HIGH: GPIO3_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_LOW: GPIO3_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_HIGH: GPIO2_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_LOW: GPIO2_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_HIGH: GPIO2_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_LOW: GPIO2_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_HIGH: GPIO1_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_LOW: GPIO1_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_HIGH: GPIO1_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_LOW: GPIO1_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_HIGH: GPIO0_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_LOW: GPIO0_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_HIGH: GPIO0_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_LOW: GPIO0_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO7_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO7_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO7_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO7_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO6_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO6_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO6_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO6_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO5_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO5_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO5_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO5_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO4_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO4_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO4_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO4_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO3_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO3_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO3_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO3_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO2_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO2_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO2_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO2_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO1_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO1_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO1_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO1_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO0_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO0_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO0_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO0_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC1_INTS0_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var GPIO7_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO7_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO7_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO7_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = PROC1_INTS0_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var GPIO7_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO7_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO7_EDGE_HIGH)
                }
                }
              public var GPIO7_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_EDGE_LOW)
                }
              }
              public var GPIO7_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_HIGH)
                }
              }
              public var GPIO7_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_LOW)
                }
              }
              public var GPIO6_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_HIGH)
                }
              }
              public var GPIO6_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_LOW)
                }
              }
              public var GPIO6_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_HIGH)
                }
              }
              public var GPIO6_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_LOW)
                }
              }
              public var GPIO5_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_HIGH)
                }
              }
              public var GPIO5_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_LOW)
                }
              }
              public var GPIO5_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_HIGH)
                }
              }
              public var GPIO5_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_LOW)
                }
              }
              public var GPIO4_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_HIGH)
                }
              }
              public var GPIO4_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_LOW)
                }
              }
              public var GPIO4_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_HIGH)
                }
              }
              public var GPIO4_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_LOW)
                }
              }
              public var GPIO3_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_HIGH)
                }
              }
              public var GPIO3_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_LOW)
                }
              }
              public var GPIO3_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_HIGH)
                }
              }
              public var GPIO3_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_LOW)
                }
              }
              public var GPIO2_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_HIGH)
                }
              }
              public var GPIO2_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_LOW)
                }
              }
              public var GPIO2_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_HIGH)
                }
              }
              public var GPIO2_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_LOW)
                }
              }
              public var GPIO1_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_HIGH)
                }
              }
              public var GPIO1_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_LOW)
                }
              }
              public var GPIO1_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_HIGH)
                }
              }
              public var GPIO1_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_LOW)
                }
              }
              public var GPIO0_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_HIGH)
                }
              }
              public var GPIO0_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_LOW)
                }
              }
              public var GPIO0_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_HIGH)
                }
              }
              public var GPIO0_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_LOW)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = PROC1_INTS0_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// Interrupt status after masking & forcing for proc1
    public var PROC1_INTS1: Register<PROC1_INTS1_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0154), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0154))
          #endif
        }
    }
    public struct PROC1_INTS1_Descriptor {
        @available(*, unavailable)
        public var GPIO15_EDGE_HIGH: GPIO15_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_EDGE_LOW: GPIO15_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_HIGH: GPIO15_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_LOW: GPIO15_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_HIGH: GPIO14_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_LOW: GPIO14_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_HIGH: GPIO14_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_LOW: GPIO14_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_HIGH: GPIO13_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_LOW: GPIO13_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_HIGH: GPIO13_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_LOW: GPIO13_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_HIGH: GPIO12_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_LOW: GPIO12_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_HIGH: GPIO12_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_LOW: GPIO12_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_HIGH: GPIO11_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_LOW: GPIO11_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_HIGH: GPIO11_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_LOW: GPIO11_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_HIGH: GPIO10_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_LOW: GPIO10_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_HIGH: GPIO10_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_LOW: GPIO10_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_HIGH: GPIO9_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_LOW: GPIO9_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_HIGH: GPIO9_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_LOW: GPIO9_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_HIGH: GPIO8_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_LOW: GPIO8_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_HIGH: GPIO8_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_LOW: GPIO8_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO15_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO15_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO15_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO15_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO14_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO14_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO14_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO14_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO13_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO13_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO13_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO13_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO12_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO12_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO12_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO12_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO11_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO11_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO11_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO11_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO10_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO10_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO10_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO10_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO9_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO9_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO9_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO9_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO8_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO8_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO8_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO8_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC1_INTS1_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var GPIO15_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO15_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO15_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO15_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = PROC1_INTS1_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var GPIO15_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO15_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO15_EDGE_HIGH)
                }
                }
              public var GPIO15_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_EDGE_LOW)
                }
              }
              public var GPIO15_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_HIGH)
                }
              }
              public var GPIO15_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_LOW)
                }
              }
              public var GPIO14_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_HIGH)
                }
              }
              public var GPIO14_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_LOW)
                }
              }
              public var GPIO14_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_HIGH)
                }
              }
              public var GPIO14_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_LOW)
                }
              }
              public var GPIO13_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_HIGH)
                }
              }
              public var GPIO13_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_LOW)
                }
              }
              public var GPIO13_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_HIGH)
                }
              }
              public var GPIO13_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_LOW)
                }
              }
              public var GPIO12_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_HIGH)
                }
              }
              public var GPIO12_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_LOW)
                }
              }
              public var GPIO12_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_HIGH)
                }
              }
              public var GPIO12_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_LOW)
                }
              }
              public var GPIO11_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_HIGH)
                }
              }
              public var GPIO11_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_LOW)
                }
              }
              public var GPIO11_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_HIGH)
                }
              }
              public var GPIO11_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_LOW)
                }
              }
              public var GPIO10_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_HIGH)
                }
              }
              public var GPIO10_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_LOW)
                }
              }
              public var GPIO10_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_HIGH)
                }
              }
              public var GPIO10_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_LOW)
                }
              }
              public var GPIO9_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_HIGH)
                }
              }
              public var GPIO9_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_LOW)
                }
              }
              public var GPIO9_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_HIGH)
                }
              }
              public var GPIO9_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_LOW)
                }
              }
              public var GPIO8_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_HIGH)
                }
              }
              public var GPIO8_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_LOW)
                }
              }
              public var GPIO8_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_HIGH)
                }
              }
              public var GPIO8_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_LOW)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = PROC1_INTS1_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// Interrupt status after masking & forcing for proc1
    public var PROC1_INTS2: Register<PROC1_INTS2_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0158), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0158))
          #endif
        }
    }
    public struct PROC1_INTS2_Descriptor {
        @available(*, unavailable)
        public var GPIO23_EDGE_HIGH: GPIO23_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_EDGE_LOW: GPIO23_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_HIGH: GPIO23_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_LOW: GPIO23_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_HIGH: GPIO22_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_LOW: GPIO22_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_HIGH: GPIO22_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_LOW: GPIO22_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_HIGH: GPIO21_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_LOW: GPIO21_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_HIGH: GPIO21_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_LOW: GPIO21_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_HIGH: GPIO20_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_LOW: GPIO20_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_HIGH: GPIO20_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_LOW: GPIO20_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_HIGH: GPIO19_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_LOW: GPIO19_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_HIGH: GPIO19_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_LOW: GPIO19_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_HIGH: GPIO18_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_LOW: GPIO18_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_HIGH: GPIO18_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_LOW: GPIO18_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_HIGH: GPIO17_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_LOW: GPIO17_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_HIGH: GPIO17_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_LOW: GPIO17_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_HIGH: GPIO16_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_LOW: GPIO16_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_HIGH: GPIO16_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_LOW: GPIO16_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO23_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO23_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO23_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO23_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO22_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO22_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO22_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO22_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO21_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO21_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO21_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO21_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO20_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO20_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO20_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO20_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO19_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO19_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO19_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO19_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO18_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO18_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO18_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO18_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO17_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO17_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO17_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO17_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO16_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO16_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO16_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO16_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC1_INTS2_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var GPIO23_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO23_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO23_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO23_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = PROC1_INTS2_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var GPIO23_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO23_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO23_EDGE_HIGH)
                }
                }
              public var GPIO23_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_EDGE_LOW)
                }
              }
              public var GPIO23_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_HIGH)
                }
              }
              public var GPIO23_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_LOW)
                }
              }
              public var GPIO22_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_HIGH)
                }
              }
              public var GPIO22_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_LOW)
                }
              }
              public var GPIO22_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_HIGH)
                }
              }
              public var GPIO22_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_LOW)
                }
              }
              public var GPIO21_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_HIGH)
                }
              }
              public var GPIO21_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_LOW)
                }
              }
              public var GPIO21_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_HIGH)
                }
              }
              public var GPIO21_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_LOW)
                }
              }
              public var GPIO20_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_HIGH)
                }
              }
              public var GPIO20_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_LOW)
                }
              }
              public var GPIO20_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_HIGH)
                }
              }
              public var GPIO20_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_LOW)
                }
              }
              public var GPIO19_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_HIGH)
                }
              }
              public var GPIO19_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_LOW)
                }
              }
              public var GPIO19_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_HIGH)
                }
              }
              public var GPIO19_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_LOW)
                }
              }
              public var GPIO18_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_HIGH)
                }
              }
              public var GPIO18_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_LOW)
                }
              }
              public var GPIO18_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_HIGH)
                }
              }
              public var GPIO18_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_LOW)
                }
              }
              public var GPIO17_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_HIGH)
                }
              }
              public var GPIO17_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_LOW)
                }
              }
              public var GPIO17_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_HIGH)
                }
              }
              public var GPIO17_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_LOW)
                }
              }
              public var GPIO16_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_HIGH)
                }
              }
              public var GPIO16_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_LOW)
                }
              }
              public var GPIO16_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_HIGH)
                }
              }
              public var GPIO16_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_LOW)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = PROC1_INTS2_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// Interrupt status after masking & forcing for proc1
    public var PROC1_INTS3: Register<PROC1_INTS3_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x015c), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x015c))
          #endif
        }
    }
    public struct PROC1_INTS3_Descriptor {
        @available(*, unavailable)
        public var GPIO29_EDGE_HIGH: GPIO29_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_EDGE_LOW: GPIO29_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_HIGH: GPIO29_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_LOW: GPIO29_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_HIGH: GPIO28_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_LOW: GPIO28_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_HIGH: GPIO28_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_LOW: GPIO28_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_HIGH: GPIO27_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_LOW: GPIO27_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_HIGH: GPIO27_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_LOW: GPIO27_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_HIGH: GPIO26_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_LOW: GPIO26_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_HIGH: GPIO26_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_LOW: GPIO26_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_HIGH: GPIO25_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_LOW: GPIO25_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_HIGH: GPIO25_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_LOW: GPIO25_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_HIGH: GPIO24_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_LOW: GPIO24_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_HIGH: GPIO24_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_LOW: GPIO24_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO29_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO29_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO29_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO29_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO28_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO28_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO28_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO28_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO27_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO27_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO27_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO27_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO26_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO26_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO26_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO26_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO25_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO25_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO25_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO25_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO24_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO24_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO24_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO24_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = PROC1_INTS3_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var GPIO29_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO29_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO29_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO29_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = PROC1_INTS3_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var GPIO29_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO29_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO29_EDGE_HIGH)
                }
                }
              public var GPIO29_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_EDGE_LOW)
                }
              }
              public var GPIO29_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_HIGH)
                }
              }
              public var GPIO29_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_LOW)
                }
              }
              public var GPIO28_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_HIGH)
                }
              }
              public var GPIO28_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_LOW)
                }
              }
              public var GPIO28_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_HIGH)
                }
              }
              public var GPIO28_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_LOW)
                }
              }
              public var GPIO27_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_HIGH)
                }
              }
              public var GPIO27_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_LOW)
                }
              }
              public var GPIO27_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_HIGH)
                }
              }
              public var GPIO27_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_LOW)
                }
              }
              public var GPIO26_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_HIGH)
                }
              }
              public var GPIO26_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_LOW)
                }
              }
              public var GPIO26_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_HIGH)
                }
              }
              public var GPIO26_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_LOW)
                }
              }
              public var GPIO25_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_HIGH)
                }
              }
              public var GPIO25_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_LOW)
                }
              }
              public var GPIO25_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_HIGH)
                }
              }
              public var GPIO25_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_LOW)
                }
              }
              public var GPIO24_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_HIGH)
                }
              }
              public var GPIO24_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_LOW)
                }
              }
              public var GPIO24_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_HIGH)
                }
              }
              public var GPIO24_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_LOW)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = PROC1_INTS3_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// Interrupt Enable for dormant_wake
    public var DORMANT_WAKE_INTE0: Register<DORMANT_WAKE_INTE0_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0160), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0160))
          #endif
        }
    }
    public struct DORMANT_WAKE_INTE0_Descriptor {
        @available(*, unavailable)
        public var GPIO7_EDGE_HIGH: GPIO7_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_EDGE_LOW: GPIO7_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_HIGH: GPIO7_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_LOW: GPIO7_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_HIGH: GPIO6_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_LOW: GPIO6_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_HIGH: GPIO6_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_LOW: GPIO6_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_HIGH: GPIO5_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_LOW: GPIO5_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_HIGH: GPIO5_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_LOW: GPIO5_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_HIGH: GPIO4_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_LOW: GPIO4_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_HIGH: GPIO4_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_LOW: GPIO4_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_HIGH: GPIO3_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_LOW: GPIO3_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_HIGH: GPIO3_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_LOW: GPIO3_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_HIGH: GPIO2_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_LOW: GPIO2_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_HIGH: GPIO2_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_LOW: GPIO2_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_HIGH: GPIO1_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_LOW: GPIO1_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_HIGH: GPIO1_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_LOW: GPIO1_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_HIGH: GPIO0_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_LOW: GPIO0_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_HIGH: GPIO0_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_LOW: GPIO0_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO7_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO7_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO7_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO7_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO6_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO6_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO6_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO6_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO5_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO5_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO5_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO5_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO4_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO4_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO4_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO4_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO3_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO3_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO3_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO3_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO2_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO2_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO2_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO2_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO1_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO1_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO1_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO1_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO0_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO0_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO0_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO0_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = DORMANT_WAKE_INTE0_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO7_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO7_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO7_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO7_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = DORMANT_WAKE_INTE0_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO7_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO7_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO7_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO7_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO7_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO7_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO7_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO7_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO7_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO7_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO7_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO7_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO6_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO6_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO6_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO6_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO5_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO5_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO5_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO5_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO4_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO4_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO4_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO4_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO3_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO3_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO3_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO3_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO2_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO2_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO2_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO2_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO1_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO1_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO1_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO1_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO0_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO0_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO0_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO0_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Enable for dormant_wake
    public var DORMANT_WAKE_INTE1: Register<DORMANT_WAKE_INTE1_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0164), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0164))
          #endif
        }
    }
    public struct DORMANT_WAKE_INTE1_Descriptor {
        @available(*, unavailable)
        public var GPIO15_EDGE_HIGH: GPIO15_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_EDGE_LOW: GPIO15_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_HIGH: GPIO15_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_LOW: GPIO15_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_HIGH: GPIO14_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_LOW: GPIO14_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_HIGH: GPIO14_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_LOW: GPIO14_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_HIGH: GPIO13_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_LOW: GPIO13_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_HIGH: GPIO13_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_LOW: GPIO13_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_HIGH: GPIO12_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_LOW: GPIO12_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_HIGH: GPIO12_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_LOW: GPIO12_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_HIGH: GPIO11_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_LOW: GPIO11_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_HIGH: GPIO11_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_LOW: GPIO11_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_HIGH: GPIO10_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_LOW: GPIO10_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_HIGH: GPIO10_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_LOW: GPIO10_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_HIGH: GPIO9_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_LOW: GPIO9_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_HIGH: GPIO9_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_LOW: GPIO9_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_HIGH: GPIO8_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_LOW: GPIO8_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_HIGH: GPIO8_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_LOW: GPIO8_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO15_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO15_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO15_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO15_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO14_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO14_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO14_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO14_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO13_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO13_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO13_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO13_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO12_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO12_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO12_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO12_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO11_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO11_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO11_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO11_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO10_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO10_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO10_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO10_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO9_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO9_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO9_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO9_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO8_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO8_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO8_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO8_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = DORMANT_WAKE_INTE1_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO15_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO15_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO15_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO15_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = DORMANT_WAKE_INTE1_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO15_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO15_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO15_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO15_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO15_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO15_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO15_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO15_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO15_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO15_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO15_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO15_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO14_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO14_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO14_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO14_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO13_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO13_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO13_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO13_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO12_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO12_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO12_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO12_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO11_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO11_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO11_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO11_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO10_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO10_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO10_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO10_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO9_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO9_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO9_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO9_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO8_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO8_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO8_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO8_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Enable for dormant_wake
    public var DORMANT_WAKE_INTE2: Register<DORMANT_WAKE_INTE2_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0168), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0168))
          #endif
        }
    }
    public struct DORMANT_WAKE_INTE2_Descriptor {
        @available(*, unavailable)
        public var GPIO23_EDGE_HIGH: GPIO23_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_EDGE_LOW: GPIO23_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_HIGH: GPIO23_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_LOW: GPIO23_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_HIGH: GPIO22_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_LOW: GPIO22_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_HIGH: GPIO22_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_LOW: GPIO22_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_HIGH: GPIO21_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_LOW: GPIO21_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_HIGH: GPIO21_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_LOW: GPIO21_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_HIGH: GPIO20_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_LOW: GPIO20_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_HIGH: GPIO20_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_LOW: GPIO20_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_HIGH: GPIO19_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_LOW: GPIO19_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_HIGH: GPIO19_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_LOW: GPIO19_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_HIGH: GPIO18_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_LOW: GPIO18_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_HIGH: GPIO18_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_LOW: GPIO18_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_HIGH: GPIO17_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_LOW: GPIO17_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_HIGH: GPIO17_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_LOW: GPIO17_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_HIGH: GPIO16_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_LOW: GPIO16_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_HIGH: GPIO16_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_LOW: GPIO16_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO23_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO23_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO23_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO23_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO22_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO22_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO22_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO22_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO21_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO21_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO21_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO21_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO20_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO20_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO20_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO20_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO19_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO19_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO19_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO19_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO18_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO18_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO18_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO18_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO17_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO17_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO17_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO17_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO16_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO16_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO16_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO16_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = DORMANT_WAKE_INTE2_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO23_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO23_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO23_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO23_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = DORMANT_WAKE_INTE2_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO23_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO23_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO23_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO23_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO23_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO23_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO23_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO23_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO23_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO23_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO23_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO23_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO22_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO22_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO22_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO22_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO21_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO21_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO21_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO21_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO20_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO20_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO20_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO20_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO19_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO19_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO19_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO19_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO18_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO18_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO18_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO18_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO17_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO17_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO17_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO17_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO16_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO16_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO16_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO16_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Enable for dormant_wake
    public var DORMANT_WAKE_INTE3: Register<DORMANT_WAKE_INTE3_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x016c), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x016c))
          #endif
        }
    }
    public struct DORMANT_WAKE_INTE3_Descriptor {
        @available(*, unavailable)
        public var GPIO29_EDGE_HIGH: GPIO29_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_EDGE_LOW: GPIO29_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_HIGH: GPIO29_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_LOW: GPIO29_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_HIGH: GPIO28_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_LOW: GPIO28_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_HIGH: GPIO28_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_LOW: GPIO28_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_HIGH: GPIO27_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_LOW: GPIO27_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_HIGH: GPIO27_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_LOW: GPIO27_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_HIGH: GPIO26_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_LOW: GPIO26_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_HIGH: GPIO26_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_LOW: GPIO26_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_HIGH: GPIO25_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_LOW: GPIO25_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_HIGH: GPIO25_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_LOW: GPIO25_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_HIGH: GPIO24_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_LOW: GPIO24_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_HIGH: GPIO24_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_LOW: GPIO24_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO29_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO29_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO29_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO29_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO28_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO28_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO28_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO28_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO27_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO27_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO27_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO27_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO26_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO26_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO26_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO26_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO25_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO25_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO25_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO25_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO24_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO24_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO24_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO24_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = DORMANT_WAKE_INTE3_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO29_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO29_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO29_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO29_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = DORMANT_WAKE_INTE3_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO29_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO29_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO29_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO29_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO29_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO29_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO29_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO29_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO29_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO29_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO29_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO29_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO28_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO28_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO28_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO28_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO27_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO27_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO27_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO27_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO26_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO26_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO26_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO26_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO25_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO25_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO25_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO25_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO24_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO24_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO24_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO24_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Force for dormant_wake
    public var DORMANT_WAKE_INTF0: Register<DORMANT_WAKE_INTF0_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0170), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0170))
          #endif
        }
    }
    public struct DORMANT_WAKE_INTF0_Descriptor {
        @available(*, unavailable)
        public var GPIO7_EDGE_HIGH: GPIO7_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_EDGE_LOW: GPIO7_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_HIGH: GPIO7_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_LOW: GPIO7_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_HIGH: GPIO6_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_LOW: GPIO6_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_HIGH: GPIO6_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_LOW: GPIO6_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_HIGH: GPIO5_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_LOW: GPIO5_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_HIGH: GPIO5_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_LOW: GPIO5_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_HIGH: GPIO4_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_LOW: GPIO4_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_HIGH: GPIO4_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_LOW: GPIO4_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_HIGH: GPIO3_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_LOW: GPIO3_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_HIGH: GPIO3_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_LOW: GPIO3_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_HIGH: GPIO2_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_LOW: GPIO2_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_HIGH: GPIO2_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_LOW: GPIO2_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_HIGH: GPIO1_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_LOW: GPIO1_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_HIGH: GPIO1_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_LOW: GPIO1_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_HIGH: GPIO0_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_LOW: GPIO0_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_HIGH: GPIO0_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_LOW: GPIO0_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO7_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO7_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO7_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO7_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO6_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO6_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO6_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO6_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO5_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO5_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO5_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO5_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO4_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO4_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO4_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO4_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO3_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO3_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO3_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO3_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO2_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO2_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO2_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO2_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO1_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO1_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO1_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO1_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO0_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO0_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO0_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO0_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = DORMANT_WAKE_INTF0_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO7_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO7_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO7_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO7_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = DORMANT_WAKE_INTF0_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO7_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO7_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO7_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO7_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO7_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO7_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO7_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO7_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO7_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO7_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO7_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO7_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO6_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO6_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO6_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO6_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO6_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO5_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO5_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO5_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO5_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO5_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO4_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO4_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO4_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO4_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO4_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO3_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO3_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO3_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO3_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO3_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO2_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO2_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO2_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO2_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO2_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO1_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO1_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO1_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO1_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO1_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO0_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO0_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO0_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO0_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO0_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Force for dormant_wake
    public var DORMANT_WAKE_INTF1: Register<DORMANT_WAKE_INTF1_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0174), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0174))
          #endif
        }
    }
    public struct DORMANT_WAKE_INTF1_Descriptor {
        @available(*, unavailable)
        public var GPIO15_EDGE_HIGH: GPIO15_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_EDGE_LOW: GPIO15_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_HIGH: GPIO15_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_LOW: GPIO15_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_HIGH: GPIO14_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_LOW: GPIO14_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_HIGH: GPIO14_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_LOW: GPIO14_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_HIGH: GPIO13_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_LOW: GPIO13_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_HIGH: GPIO13_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_LOW: GPIO13_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_HIGH: GPIO12_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_LOW: GPIO12_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_HIGH: GPIO12_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_LOW: GPIO12_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_HIGH: GPIO11_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_LOW: GPIO11_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_HIGH: GPIO11_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_LOW: GPIO11_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_HIGH: GPIO10_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_LOW: GPIO10_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_HIGH: GPIO10_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_LOW: GPIO10_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_HIGH: GPIO9_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_LOW: GPIO9_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_HIGH: GPIO9_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_LOW: GPIO9_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_HIGH: GPIO8_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_LOW: GPIO8_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_HIGH: GPIO8_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_LOW: GPIO8_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO15_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO15_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO15_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO15_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO14_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO14_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO14_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO14_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO13_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO13_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO13_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO13_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO12_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO12_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO12_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO12_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO11_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO11_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO11_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO11_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO10_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO10_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO10_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO10_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO9_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO9_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO9_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO9_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO8_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO8_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO8_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO8_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = DORMANT_WAKE_INTF1_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO15_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO15_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO15_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO15_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = DORMANT_WAKE_INTF1_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO15_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO15_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO15_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO15_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO15_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO15_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO15_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO15_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO15_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO15_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO15_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO15_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO14_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO14_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO14_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO14_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO14_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO13_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO13_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO13_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO13_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO13_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO12_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO12_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO12_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO12_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO12_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO11_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO11_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO11_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO11_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO11_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO10_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO10_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO10_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO10_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO10_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO9_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO9_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO9_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO9_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO9_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO8_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO8_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO8_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO8_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO8_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Force for dormant_wake
    public var DORMANT_WAKE_INTF2: Register<DORMANT_WAKE_INTF2_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0178), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0178))
          #endif
        }
    }
    public struct DORMANT_WAKE_INTF2_Descriptor {
        @available(*, unavailable)
        public var GPIO23_EDGE_HIGH: GPIO23_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_EDGE_LOW: GPIO23_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_HIGH: GPIO23_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_LOW: GPIO23_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_HIGH: GPIO22_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_LOW: GPIO22_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_HIGH: GPIO22_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_LOW: GPIO22_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_HIGH: GPIO21_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_LOW: GPIO21_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_HIGH: GPIO21_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_LOW: GPIO21_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_HIGH: GPIO20_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_LOW: GPIO20_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_HIGH: GPIO20_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_LOW: GPIO20_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_HIGH: GPIO19_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_LOW: GPIO19_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_HIGH: GPIO19_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_LOW: GPIO19_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_HIGH: GPIO18_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_LOW: GPIO18_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_HIGH: GPIO18_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_LOW: GPIO18_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_HIGH: GPIO17_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_LOW: GPIO17_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_HIGH: GPIO17_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_LOW: GPIO17_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_HIGH: GPIO16_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_LOW: GPIO16_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_HIGH: GPIO16_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_LOW: GPIO16_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO23_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO23_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO23_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO23_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO22_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO22_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO22_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO22_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO21_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO21_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO21_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO21_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO20_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO20_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO20_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO20_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO19_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO19_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO19_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO19_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO18_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO18_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO18_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO18_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO17_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO17_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO17_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO17_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO16_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO16_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO16_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO16_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = DORMANT_WAKE_INTF2_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO23_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO23_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO23_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO23_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = DORMANT_WAKE_INTF2_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO23_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO23_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO23_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO23_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO23_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO23_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO23_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO23_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO23_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO23_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO23_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO23_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO22_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO22_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO22_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO22_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO22_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO21_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO21_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO21_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO21_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO21_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO20_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO20_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO20_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO20_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO20_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO19_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO19_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO19_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO19_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO19_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO18_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO18_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO18_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO18_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO18_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO17_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO17_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO17_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO17_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO17_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO16_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO16_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO16_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO16_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO16_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt Force for dormant_wake
    public var DORMANT_WAKE_INTF3: Register<DORMANT_WAKE_INTF3_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x017c), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x017c))
          #endif
        }
    }
    public struct DORMANT_WAKE_INTF3_Descriptor {
        @available(*, unavailable)
        public var GPIO29_EDGE_HIGH: GPIO29_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_EDGE_LOW: GPIO29_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_HIGH: GPIO29_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_LOW: GPIO29_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_HIGH: GPIO28_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_LOW: GPIO28_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_HIGH: GPIO28_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_LOW: GPIO28_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_HIGH: GPIO27_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_LOW: GPIO27_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_HIGH: GPIO27_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_LOW: GPIO27_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_HIGH: GPIO26_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_LOW: GPIO26_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_HIGH: GPIO26_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_LOW: GPIO26_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_HIGH: GPIO25_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_LOW: GPIO25_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_HIGH: GPIO25_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_LOW: GPIO25_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_HIGH: GPIO24_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_LOW: GPIO24_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_HIGH: GPIO24_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_LOW: GPIO24_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO29_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO29_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO29_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO29_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO28_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO28_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO28_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO28_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO27_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO27_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO27_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO27_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO26_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO26_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO26_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO26_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO25_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO25_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO25_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO25_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO24_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO24_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO24_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO24_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = DORMANT_WAKE_INTF3_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.ReadWrite) {
                self.storage = value.storage
                }
                public var GPIO29_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO29_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO29_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO29_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  typealias Read = ReadWrite

        public  typealias Write = ReadWrite

        public  struct ReadWrite: RegisterValueRead, RegisterValueWrite {

                    public  typealias Value = DORMANT_WAKE_INTF3_Descriptor
                var storage: UInt32

                    public  init(_ value: ReadWrite) {
                self.storage = value.storage
                }

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }
                public var GPIO29_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO29_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO29_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                    preconditionMatchingBitWidth(GPIO29_EDGE_HIGH_Field.self, Bool.self)
                    self.raw.GPIO29_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
                }
              public var GPIO29_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO29_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO29_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO29_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO29_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO29_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO29_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO28_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO28_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO28_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO28_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO28_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO27_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO27_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO27_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO27_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO27_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO26_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO26_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO26_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO26_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO26_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO25_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO25_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO25_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO25_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO25_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_EDGE_HIGH_Field.self, Bool.self)
                  self.raw.GPIO24_EDGE_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_EDGE_LOW_Field.self, Bool.self)
                  self.raw.GPIO24_EDGE_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_HIGH)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_HIGH_Field.self, Bool.self)
                  self.raw.GPIO24_LEVEL_HIGH = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
              public var GPIO24_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_LOW)
                }
                @inlinable @inline(__always) set {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_LOW_Field.self, Bool.self)
                  self.raw.GPIO24_LEVEL_LOW = newValue.storage(Self.Value.Raw.Storage.self)
                }
              }
        }
    }

    /// Interrupt status after masking & forcing for dormant_wake
    public var DORMANT_WAKE_INTS0: Register<DORMANT_WAKE_INTS0_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0180), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0180))
          #endif
        }
    }
    public struct DORMANT_WAKE_INTS0_Descriptor {
        @available(*, unavailable)
        public var GPIO7_EDGE_HIGH: GPIO7_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_EDGE_LOW: GPIO7_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_HIGH: GPIO7_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO7_LEVEL_LOW: GPIO7_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_HIGH: GPIO6_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_EDGE_LOW: GPIO6_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_HIGH: GPIO6_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO6_LEVEL_LOW: GPIO6_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_HIGH: GPIO5_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_EDGE_LOW: GPIO5_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_HIGH: GPIO5_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO5_LEVEL_LOW: GPIO5_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_HIGH: GPIO4_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_EDGE_LOW: GPIO4_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_HIGH: GPIO4_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO4_LEVEL_LOW: GPIO4_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_HIGH: GPIO3_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_EDGE_LOW: GPIO3_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_HIGH: GPIO3_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO3_LEVEL_LOW: GPIO3_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_HIGH: GPIO2_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_EDGE_LOW: GPIO2_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_HIGH: GPIO2_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO2_LEVEL_LOW: GPIO2_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_HIGH: GPIO1_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_EDGE_LOW: GPIO1_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_HIGH: GPIO1_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO1_LEVEL_LOW: GPIO1_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_HIGH: GPIO0_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_EDGE_LOW: GPIO0_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_HIGH: GPIO0_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO0_LEVEL_LOW: GPIO0_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO7_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO7_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO7_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO7_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO6_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO6_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO6_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO6_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO5_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO5_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO5_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO5_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO4_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO4_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO4_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO4_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO3_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO3_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO3_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO3_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO2_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO2_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO2_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO2_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO1_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO1_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO1_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO1_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO0_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO0_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO0_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO0_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = DORMANT_WAKE_INTS0_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var GPIO7_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO7_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO7_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO7_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO7_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO7_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO7_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO6_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO6_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO6_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO5_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO5_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO5_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO4_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO4_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO4_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO3_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO3_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO3_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO2_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO2_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO2_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO1_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO1_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO1_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO0_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO0_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO0_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = DORMANT_WAKE_INTS0_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var GPIO7_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO7_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO7_EDGE_HIGH)
                }
                }
              public var GPIO7_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_EDGE_LOW)
                }
              }
              public var GPIO7_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_HIGH)
                }
              }
              public var GPIO7_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO7_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO7_LEVEL_LOW)
                }
              }
              public var GPIO6_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_HIGH)
                }
              }
              public var GPIO6_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_EDGE_LOW)
                }
              }
              public var GPIO6_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_HIGH)
                }
              }
              public var GPIO6_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO6_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO6_LEVEL_LOW)
                }
              }
              public var GPIO5_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_HIGH)
                }
              }
              public var GPIO5_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_EDGE_LOW)
                }
              }
              public var GPIO5_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_HIGH)
                }
              }
              public var GPIO5_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO5_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO5_LEVEL_LOW)
                }
              }
              public var GPIO4_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_HIGH)
                }
              }
              public var GPIO4_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_EDGE_LOW)
                }
              }
              public var GPIO4_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_HIGH)
                }
              }
              public var GPIO4_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO4_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO4_LEVEL_LOW)
                }
              }
              public var GPIO3_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_HIGH)
                }
              }
              public var GPIO3_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_EDGE_LOW)
                }
              }
              public var GPIO3_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_HIGH)
                }
              }
              public var GPIO3_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO3_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO3_LEVEL_LOW)
                }
              }
              public var GPIO2_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_HIGH)
                }
              }
              public var GPIO2_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_EDGE_LOW)
                }
              }
              public var GPIO2_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_HIGH)
                }
              }
              public var GPIO2_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO2_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO2_LEVEL_LOW)
                }
              }
              public var GPIO1_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_HIGH)
                }
              }
              public var GPIO1_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_EDGE_LOW)
                }
              }
              public var GPIO1_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_HIGH)
                }
              }
              public var GPIO1_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO1_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO1_LEVEL_LOW)
                }
              }
              public var GPIO0_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_HIGH)
                }
              }
              public var GPIO0_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_EDGE_LOW)
                }
              }
              public var GPIO0_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_HIGH)
                }
              }
              public var GPIO0_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO0_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO0_LEVEL_LOW)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = DORMANT_WAKE_INTS0_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// Interrupt status after masking & forcing for dormant_wake
    public var DORMANT_WAKE_INTS1: Register<DORMANT_WAKE_INTS1_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0184), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0184))
          #endif
        }
    }
    public struct DORMANT_WAKE_INTS1_Descriptor {
        @available(*, unavailable)
        public var GPIO15_EDGE_HIGH: GPIO15_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_EDGE_LOW: GPIO15_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_HIGH: GPIO15_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO15_LEVEL_LOW: GPIO15_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_HIGH: GPIO14_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_EDGE_LOW: GPIO14_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_HIGH: GPIO14_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO14_LEVEL_LOW: GPIO14_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_HIGH: GPIO13_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_EDGE_LOW: GPIO13_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_HIGH: GPIO13_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO13_LEVEL_LOW: GPIO13_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_HIGH: GPIO12_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_EDGE_LOW: GPIO12_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_HIGH: GPIO12_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO12_LEVEL_LOW: GPIO12_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_HIGH: GPIO11_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_EDGE_LOW: GPIO11_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_HIGH: GPIO11_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO11_LEVEL_LOW: GPIO11_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_HIGH: GPIO10_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_EDGE_LOW: GPIO10_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_HIGH: GPIO10_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO10_LEVEL_LOW: GPIO10_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_HIGH: GPIO9_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_EDGE_LOW: GPIO9_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_HIGH: GPIO9_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO9_LEVEL_LOW: GPIO9_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_HIGH: GPIO8_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_EDGE_LOW: GPIO8_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_HIGH: GPIO8_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO8_LEVEL_LOW: GPIO8_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO15_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO15_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO15_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO15_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO14_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO14_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO14_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO14_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO13_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO13_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO13_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO13_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO12_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO12_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO12_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO12_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO11_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO11_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO11_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO11_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO10_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO10_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO10_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO10_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO9_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO9_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO9_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO9_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO8_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO8_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO8_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO8_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = DORMANT_WAKE_INTS1_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var GPIO15_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO15_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO15_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO15_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO15_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO15_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO15_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO14_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO14_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO14_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO13_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO13_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO13_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO12_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO12_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO12_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO11_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO11_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO11_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO10_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO10_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO10_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO9_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO9_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO9_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO8_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO8_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO8_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = DORMANT_WAKE_INTS1_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var GPIO15_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO15_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO15_EDGE_HIGH)
                }
                }
              public var GPIO15_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_EDGE_LOW)
                }
              }
              public var GPIO15_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_HIGH)
                }
              }
              public var GPIO15_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO15_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO15_LEVEL_LOW)
                }
              }
              public var GPIO14_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_HIGH)
                }
              }
              public var GPIO14_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_EDGE_LOW)
                }
              }
              public var GPIO14_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_HIGH)
                }
              }
              public var GPIO14_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO14_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO14_LEVEL_LOW)
                }
              }
              public var GPIO13_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_HIGH)
                }
              }
              public var GPIO13_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_EDGE_LOW)
                }
              }
              public var GPIO13_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_HIGH)
                }
              }
              public var GPIO13_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO13_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO13_LEVEL_LOW)
                }
              }
              public var GPIO12_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_HIGH)
                }
              }
              public var GPIO12_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_EDGE_LOW)
                }
              }
              public var GPIO12_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_HIGH)
                }
              }
              public var GPIO12_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO12_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO12_LEVEL_LOW)
                }
              }
              public var GPIO11_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_HIGH)
                }
              }
              public var GPIO11_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_EDGE_LOW)
                }
              }
              public var GPIO11_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_HIGH)
                }
              }
              public var GPIO11_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO11_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO11_LEVEL_LOW)
                }
              }
              public var GPIO10_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_HIGH)
                }
              }
              public var GPIO10_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_EDGE_LOW)
                }
              }
              public var GPIO10_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_HIGH)
                }
              }
              public var GPIO10_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO10_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO10_LEVEL_LOW)
                }
              }
              public var GPIO9_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_HIGH)
                }
              }
              public var GPIO9_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_EDGE_LOW)
                }
              }
              public var GPIO9_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_HIGH)
                }
              }
              public var GPIO9_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO9_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO9_LEVEL_LOW)
                }
              }
              public var GPIO8_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_HIGH)
                }
              }
              public var GPIO8_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_EDGE_LOW)
                }
              }
              public var GPIO8_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_HIGH)
                }
              }
              public var GPIO8_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO8_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO8_LEVEL_LOW)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = DORMANT_WAKE_INTS1_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// Interrupt status after masking & forcing for dormant_wake
    public var DORMANT_WAKE_INTS2: Register<DORMANT_WAKE_INTS2_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x0188), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x0188))
          #endif
        }
    }
    public struct DORMANT_WAKE_INTS2_Descriptor {
        @available(*, unavailable)
        public var GPIO23_EDGE_HIGH: GPIO23_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_EDGE_LOW: GPIO23_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_HIGH: GPIO23_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO23_LEVEL_LOW: GPIO23_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_HIGH: GPIO22_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_EDGE_LOW: GPIO22_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_HIGH: GPIO22_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO22_LEVEL_LOW: GPIO22_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_HIGH: GPIO21_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_EDGE_LOW: GPIO21_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_HIGH: GPIO21_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO21_LEVEL_LOW: GPIO21_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_HIGH: GPIO20_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_EDGE_LOW: GPIO20_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_HIGH: GPIO20_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO20_LEVEL_LOW: GPIO20_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_HIGH: GPIO19_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_EDGE_LOW: GPIO19_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_HIGH: GPIO19_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO19_LEVEL_LOW: GPIO19_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_HIGH: GPIO18_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_EDGE_LOW: GPIO18_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_HIGH: GPIO18_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO18_LEVEL_LOW: GPIO18_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_HIGH: GPIO17_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_EDGE_LOW: GPIO17_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_HIGH: GPIO17_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO17_LEVEL_LOW: GPIO17_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_HIGH: GPIO16_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_EDGE_LOW: GPIO16_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_HIGH: GPIO16_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO16_LEVEL_LOW: GPIO16_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO23_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 31 ..< 32
        }

        public enum GPIO23_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 30 ..< 31
        }

        public enum GPIO23_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 29 ..< 30
        }

        public enum GPIO23_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 28 ..< 29
        }

        public enum GPIO22_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 27 ..< 28
        }

        public enum GPIO22_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 26 ..< 27
        }

        public enum GPIO22_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 25 ..< 26
        }

        public enum GPIO22_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 24 ..< 25
        }

        public enum GPIO21_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO21_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO21_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO21_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO20_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO20_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO20_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO20_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO19_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO19_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO19_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO19_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO18_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO18_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO18_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO18_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO17_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO17_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO17_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO17_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO16_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO16_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO16_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO16_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = DORMANT_WAKE_INTS2_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var GPIO23_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO23_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO23_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO23_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO23_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO23_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO23_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO22_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO22_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO22_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO21_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO21_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO21_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO20_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO20_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO20_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO19_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO19_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO19_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO18_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO18_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO18_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO17_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO17_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO17_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO16_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO16_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO16_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = DORMANT_WAKE_INTS2_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var GPIO23_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO23_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO23_EDGE_HIGH)
                }
                }
              public var GPIO23_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_EDGE_LOW)
                }
              }
              public var GPIO23_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_HIGH)
                }
              }
              public var GPIO23_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO23_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO23_LEVEL_LOW)
                }
              }
              public var GPIO22_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_HIGH)
                }
              }
              public var GPIO22_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_EDGE_LOW)
                }
              }
              public var GPIO22_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_HIGH)
                }
              }
              public var GPIO22_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO22_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO22_LEVEL_LOW)
                }
              }
              public var GPIO21_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_HIGH)
                }
              }
              public var GPIO21_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_EDGE_LOW)
                }
              }
              public var GPIO21_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_HIGH)
                }
              }
              public var GPIO21_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO21_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO21_LEVEL_LOW)
                }
              }
              public var GPIO20_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_HIGH)
                }
              }
              public var GPIO20_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_EDGE_LOW)
                }
              }
              public var GPIO20_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_HIGH)
                }
              }
              public var GPIO20_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO20_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO20_LEVEL_LOW)
                }
              }
              public var GPIO19_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_HIGH)
                }
              }
              public var GPIO19_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_EDGE_LOW)
                }
              }
              public var GPIO19_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_HIGH)
                }
              }
              public var GPIO19_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO19_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO19_LEVEL_LOW)
                }
              }
              public var GPIO18_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_HIGH)
                }
              }
              public var GPIO18_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_EDGE_LOW)
                }
              }
              public var GPIO18_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_HIGH)
                }
              }
              public var GPIO18_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO18_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO18_LEVEL_LOW)
                }
              }
              public var GPIO17_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_HIGH)
                }
              }
              public var GPIO17_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_EDGE_LOW)
                }
              }
              public var GPIO17_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_HIGH)
                }
              }
              public var GPIO17_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO17_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO17_LEVEL_LOW)
                }
              }
              public var GPIO16_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_HIGH)
                }
              }
              public var GPIO16_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_EDGE_LOW)
                }
              }
              public var GPIO16_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_HIGH)
                }
              }
              public var GPIO16_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO16_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO16_LEVEL_LOW)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = DORMANT_WAKE_INTS2_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    /// Interrupt status after masking & forcing for dormant_wake
    public var DORMANT_WAKE_INTS3: Register<DORMANT_WAKE_INTS3_Descriptor> {
        @inlinable @inline(__always) get {
          #if FEATURE_INTERPOSABLE
          return .init(unsafeAddress: self.unsafeAddress + (0x018c), interposer: self.interposer)
          #else
          return .init(unsafeAddress: self.unsafeAddress + (0x018c))
          #endif
        }
    }
    public struct DORMANT_WAKE_INTS3_Descriptor {
        @available(*, unavailable)
        public var GPIO29_EDGE_HIGH: GPIO29_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_EDGE_LOW: GPIO29_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_HIGH: GPIO29_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO29_LEVEL_LOW: GPIO29_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_HIGH: GPIO28_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_EDGE_LOW: GPIO28_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_HIGH: GPIO28_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO28_LEVEL_LOW: GPIO28_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_HIGH: GPIO27_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_EDGE_LOW: GPIO27_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_HIGH: GPIO27_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO27_LEVEL_LOW: GPIO27_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_HIGH: GPIO26_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_EDGE_LOW: GPIO26_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_HIGH: GPIO26_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO26_LEVEL_LOW: GPIO26_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_HIGH: GPIO25_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_EDGE_LOW: GPIO25_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_HIGH: GPIO25_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO25_LEVEL_LOW: GPIO25_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_HIGH: GPIO24_EDGE_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_EDGE_LOW: GPIO24_EDGE_LOW_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_HIGH: GPIO24_LEVEL_HIGH_Field {
            get {
                fatalError()
            }
        }
        @available(*, unavailable)
        public var GPIO24_LEVEL_LOW: GPIO24_LEVEL_LOW_Field {
            get {
                fatalError()
            }
        }

        private init() {
            fatalError()
        }

        private var _never: Never

        public enum GPIO29_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 23 ..< 24
        }

        public enum GPIO29_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 22 ..< 23
        }

        public enum GPIO29_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 21 ..< 22
        }

        public enum GPIO29_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 20 ..< 21
        }

        public enum GPIO28_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 19 ..< 20
        }

        public enum GPIO28_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 18 ..< 19
        }

        public enum GPIO28_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 17 ..< 18
        }

        public enum GPIO28_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 16 ..< 17
        }

        public enum GPIO27_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 15 ..< 16
        }

        public enum GPIO27_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 14 ..< 15
        }

        public enum GPIO27_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 13 ..< 14
        }

        public enum GPIO27_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 12 ..< 13
        }

        public enum GPIO26_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 11 ..< 12
        }

        public enum GPIO26_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 10 ..< 11
        }

        public enum GPIO26_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 9 ..< 10
        }

        public enum GPIO26_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 8 ..< 9
        }

        public enum GPIO25_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 7 ..< 8
        }

        public enum GPIO25_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 6 ..< 7
        }

        public enum GPIO25_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 5 ..< 6
        }

        public enum GPIO25_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 4 ..< 5
        }

        public enum GPIO24_EDGE_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 3 ..< 4
        }

        public enum GPIO24_EDGE_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 2 ..< 3
        }

        public enum GPIO24_LEVEL_HIGH_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 1 ..< 2
        }

        public enum GPIO24_LEVEL_LOW_Field: ContiguousBitField {
          public typealias Storage = UInt32
          public static let bitRange = 0 ..< 1
        }

        public  struct Raw: RegisterValueRaw {

                    public  typealias Value = DORMANT_WAKE_INTS3_Descriptor

                    public  typealias Storage = UInt32

                    public  var storage: Storage

                    public  init(_ storage: Storage) {
                self.storage = storage
                }

                    public  init(_ value: Value.Read) {
                self.storage = value.storage
                }

                  public  init(_ value: Value.Write) {
            self.storage = value.storage
              }
                public var GPIO29_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                    GPIO29_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                    GPIO29_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
                }
              public var GPIO29_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO29_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO29_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO29_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO28_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO28_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO28_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO27_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO27_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO27_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO26_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO26_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO26_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO25_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO25_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO25_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_EDGE_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_EDGE_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_EDGE_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_HIGH: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_HIGH_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_HIGH_Field.insert(newValue, into: &self.storage)
                }
              }
              public var GPIO24_LEVEL_LOW: UInt32 {
                @inlinable @inline(__always) get {
                  GPIO24_LEVEL_LOW_Field.extract(from: self.storage)
                }
                @inlinable @inline(__always) set {
                  GPIO24_LEVEL_LOW_Field.insert(newValue, into: &self.storage)
                }
              }
        }

        public  struct Read: RegisterValueRead {

                    public  typealias Value = DORMANT_WAKE_INTS3_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                  self.storage = value.storage
              }
                public var GPIO29_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                    preconditionMatchingBitWidth(GPIO29_EDGE_HIGH_Field.self, Bool.self)
                    return Bool(storage: self.raw.GPIO29_EDGE_HIGH)
                }
                }
              public var GPIO29_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_EDGE_LOW)
                }
              }
              public var GPIO29_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_HIGH)
                }
              }
              public var GPIO29_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO29_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO29_LEVEL_LOW)
                }
              }
              public var GPIO28_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_HIGH)
                }
              }
              public var GPIO28_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_EDGE_LOW)
                }
              }
              public var GPIO28_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_HIGH)
                }
              }
              public var GPIO28_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO28_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO28_LEVEL_LOW)
                }
              }
              public var GPIO27_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_HIGH)
                }
              }
              public var GPIO27_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_EDGE_LOW)
                }
              }
              public var GPIO27_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_HIGH)
                }
              }
              public var GPIO27_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO27_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO27_LEVEL_LOW)
                }
              }
              public var GPIO26_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_HIGH)
                }
              }
              public var GPIO26_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_EDGE_LOW)
                }
              }
              public var GPIO26_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_HIGH)
                }
              }
              public var GPIO26_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO26_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO26_LEVEL_LOW)
                }
              }
              public var GPIO25_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_HIGH)
                }
              }
              public var GPIO25_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_EDGE_LOW)
                }
              }
              public var GPIO25_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_HIGH)
                }
              }
              public var GPIO25_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO25_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO25_LEVEL_LOW)
                }
              }
              public var GPIO24_EDGE_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_HIGH)
                }
              }
              public var GPIO24_EDGE_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_EDGE_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_EDGE_LOW)
                }
              }
              public var GPIO24_LEVEL_HIGH: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_HIGH_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_HIGH)
                }
              }
              public var GPIO24_LEVEL_LOW: Bool {
                @inlinable @inline(__always) get {
                  preconditionMatchingBitWidth(GPIO24_LEVEL_LOW_Field.self, Bool.self)
                  return Bool(storage: self.raw.GPIO24_LEVEL_LOW)
                }
              }
        }

        public  struct Write: RegisterValueWrite {

                    public  typealias Value = DORMANT_WAKE_INTS3_Descriptor
                var storage: UInt32

                    public  init(_ value: Raw) {
                self.storage = value.storage
                }

                    public  init(_ value: Read) {
                // FIXME: mask off bits
                self.storage = value.storage
                }

        }
    }

    public  let unsafeAddress: UInt

    #if FEATURE_INTERPOSABLE
    var interposer: (any MMIOInterposer)?
    #endif

    #if FEATURE_INTERPOSABLE
    @inlinable @inline(__always)
    public init(unsafeAddress: UInt, interposer: (any MMIOInterposer)?) {
      self.unsafeAddress = unsafeAddress
      self.interposer = interposer
    }
    #else
    @inlinable @inline(__always)
    public init(unsafeAddress: UInt) {
      self.unsafeAddress = unsafeAddress
    }
    #endif
}

extension IO_BANK0.GPIO0_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO0_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO1_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO1_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO2_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO2_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO3_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO3_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO4_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO4_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO5_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO5_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO6_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO6_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO7_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO7_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO8_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO8_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO9_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO9_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO10_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO10_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO11_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO11_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO12_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO12_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO13_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO13_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO14_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO14_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO15_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO15_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO16_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO16_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO17_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO17_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO18_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO18_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO19_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO19_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO20_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO20_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO21_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO21_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO22_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO22_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO23_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO23_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO24_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO24_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO25_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO25_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO26_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO26_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO27_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO27_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO28_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO28_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO29_STATUS_Descriptor: RegisterValue {
}

extension IO_BANK0.GPIO29_CTRL_Descriptor: RegisterValue {
}

extension IO_BANK0.INTR0_Descriptor: RegisterValue {
}

extension IO_BANK0.INTR1_Descriptor: RegisterValue {
}

extension IO_BANK0.INTR2_Descriptor: RegisterValue {
}

extension IO_BANK0.INTR3_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC0_INTE0_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC0_INTE1_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC0_INTE2_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC0_INTE3_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC0_INTF0_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC0_INTF1_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC0_INTF2_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC0_INTF3_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC0_INTS0_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC0_INTS1_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC0_INTS2_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC0_INTS3_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC1_INTE0_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC1_INTE1_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC1_INTE2_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC1_INTE3_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC1_INTF0_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC1_INTF1_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC1_INTF2_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC1_INTF3_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC1_INTS0_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC1_INTS1_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC1_INTS2_Descriptor: RegisterValue {
}

extension IO_BANK0.PROC1_INTS3_Descriptor: RegisterValue {
}

extension IO_BANK0.DORMANT_WAKE_INTE0_Descriptor: RegisterValue {
}

extension IO_BANK0.DORMANT_WAKE_INTE1_Descriptor: RegisterValue {
}

extension IO_BANK0.DORMANT_WAKE_INTE2_Descriptor: RegisterValue {
}

extension IO_BANK0.DORMANT_WAKE_INTE3_Descriptor: RegisterValue {
}

extension IO_BANK0.DORMANT_WAKE_INTF0_Descriptor: RegisterValue {
}

extension IO_BANK0.DORMANT_WAKE_INTF1_Descriptor: RegisterValue {
}

extension IO_BANK0.DORMANT_WAKE_INTF2_Descriptor: RegisterValue {
}

extension IO_BANK0.DORMANT_WAKE_INTF3_Descriptor: RegisterValue {
}

extension IO_BANK0.DORMANT_WAKE_INTS0_Descriptor: RegisterValue {
}

extension IO_BANK0.DORMANT_WAKE_INTS1_Descriptor: RegisterValue {
}

extension IO_BANK0.DORMANT_WAKE_INTS2_Descriptor: RegisterValue {
}

extension IO_BANK0.DORMANT_WAKE_INTS3_Descriptor: RegisterValue {
}
